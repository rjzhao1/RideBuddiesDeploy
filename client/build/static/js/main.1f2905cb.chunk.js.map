{"version":3,"sources":["img/landing.jpg","img/dashboard.jpg","img/compass.svg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/navbar.component.js","components/pages/Landing.component.js","components/Auth/Login.components.js","components/Auth/Register.components.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","components/pages/list-rides.component.js","components/pages/my-rides.component.js","components/pages/add-rides.component.js","components/pages/ride-host.component.js","components/pages/map.component.js","App.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","loginUser","userData","dispatch","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","catch","err","type","payload","response","logoutUser","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navbar","onLogoutClick","e","preventDefault","props","logInDemo","email","password","isLoggedIn","this","className","to","onClick","style","marginRight","Component","connect","Landing","history","push","button_style","width","letterSpacing","borderRadius","margin","backgroundImage","background","Login","onChange","setState","target","id","value","onSubmit","User","username","nextProps","paddingLeft","noValidate","error","classnames","invalid","emailnotfound","passwordincorrect","marginTop","Register","newUser","password2","registerUser","withRouter","component","rest","render","Dashboard","marginLeft","dashboard","split","Ride","rides","group_Name","host_email","pickup","location","date","substring","time","seats","deleteRides","_id","joinRide","RidesList","bind","rideList","get","console","log","delete","filter","rl","passenger","passenger_name","passenger_email","window","alert","map","currRide","key","MyRidesList","some","passengers","libraries","PlacesAutocomplete","usePlacesAutocomplete","requestOptions","lat","lng","radius","ready","suggestions","status","setValue","clearSuggestions","onSelect","address","a","getGeocode","results","getLatLng","onChangeLocation","disabled","placeholder","description","AddRide","onChangeGroupName","onChangeSeats","onChangeDate","onChangePickup","onChangeTime","Date","timeString","ride","noSeats","seatNaN","googleMapsApiKey","process","REACT_APP_GOOGLE_KEY","selected","use12Hours","format","Passenger","RidesHost","match","params","currpassenger","minHeight","passengerList","mapContainerStyle","height","center","options","disableDefaultUI","zoomControl","panTo","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","src","compass","alt","RideMap","onMapLoad","currlat","currlong","currSelected","setZoom","zoom","onLoad","icon","url","onCloseClick","jwtToken","currentTime","now","exp","href","App","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f2905cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.22b51f76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.6ed11d8e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/compass.d0ced76b.svg\";","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  \r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) \r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n\r\n      //Store token into localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      setAuthToken(token);\r\n\r\n      const decoded = jwt_decode(token);\r\n\r\n      //calls setCurrent User to set the type \r\n      //to SET_CURRENT_USER and update the current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n\r\n  localStorage.removeItem(\"jwtToken\");\r\n\r\n  setAuthToken(false);\r\n\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export default function(state = initialState, action) {\r\n    //Take actions depending on type\r\n    switch (action.type) {\r\n      //If current action is SET_CURRENT_USER\r\n      //Set isAuthenictated and user to current user\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n  )\r\n);\r\nexport default store;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser,loginUser} from '../actions/authActions';\r\n\r\nclass Navbar extends Component {\r\n\tonLogoutClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.logoutUser();\r\n\t};\r\n\r\n\tlogInDemo =(e)=>{\r\n\t\te.preventDefault();\r\n\t\tconst User ={\r\n\t\t\temail:\"JohnDoe@email.com\",\r\n            password:\"12345678\",\r\n\t\t}\r\n\t\tthis.props.loginUser(User);\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst isLoggedIn = this.props.auth.isAuthenticated;\r\n\r\n\t\treturn (\r\n\t\t\t<nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n\t\t\t\t<Link to=\"/\" className=\"navbar-brand\">\r\n\t\t\t\t\tRideBuddies\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"collpase navbar-collapse\">\r\n\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t\t{/* Index page link */}\r\n\t\t\t\t\t\t<li className=\"navbar-item\">\r\n\t\t\t\t\t\t\t<Link to=\"/rides\" className=\"nav-link\">\r\n\t\t\t\t\t\t\t\tFind Rides\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t{/* Links to Ride form */}\r\n\t\t\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t\t\t<li className=\"navbar-item\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/rides/add\" className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\tCreate Rides\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* Link to see user's ride */}\r\n\t\t\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t\t\t<li className=\"navbar-item\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/rides/myRides\" className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\tMy Rides\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{/* Google Maps Link */}\r\n\t\t\t\t\t\t<li className=\"navbar-item\">\r\n\t\t\t\t\t\t\t<Link to=\"/map\" className=\"nav-link\">\r\n\t\t\t\t\t\t\t\tRide Map\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ul className=\"navbar-nav navbar-right\">\r\n\r\n\t\t\t\t\t\t{/* If User is logged in show Logout, otherwise show login */}\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.onLogoutClick}\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger btn-small btn-nav navbar-right\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-small btn-nav navbar-right\"\r\n\t\t\t\t\t\t\t\t\tstyle={{marginRight:\"1em\"}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tLog In\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* If User is not logged in, Show demo login */}\r\n\t\t\t\t\t\t\t{!isLoggedIn ? (\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.logInDemo}\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger btn-small btn-nav navbar-right\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDemo\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : \"\"}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNavbar.propTypes = {\r\n\tlogoutUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser,loginUser })(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport background from \"../../img/landing.jpg\"\r\n\r\n\r\n\r\nclass Landing extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    render(){\r\n        const button_style = {\r\n            width: \"140px\",\r\n            letterSpacing: \"1.5px\",\r\n            borderRadius:\"5px\",\r\n            margin: \"5px\"\r\n            }\r\n        return( \r\n                <div className=\"bg\" style={{backgroundImage:`url(${background})`}} >\r\n                    <div className=\"container text-center p-5\"> \r\n                        <h1>Welcome</h1>\r\n                        <h5>Welcome to RideBuddies. Here you can organize and find a rides that you need.</h5>\r\n                        {/* Login and Register button */}\r\n                        <p>\r\n                            <Link \r\n                                to=\"/register\" \r\n                                style={button_style}\r\n                                className=\"btn btn-secondary my-2\">Register</Link>\r\n\r\n\r\n                            <Link \r\n                                to=\"/login\" \r\n                                style={button_style}\r\n                                className=\"btn btn-primary my-2\">Login</Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n             \r\n                \r\n            \r\n           \r\n        )\r\n    }\r\n} \r\n\r\n\r\nLanding.propTypes = {\r\n    auth:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Landing);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            username:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page,\r\n        // should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        \r\n        //Display errors if there is set errors if there is any errors\r\n        if(nextProps.auth.isAuthenticated){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    //Change state of email and password\r\n    onChange = e =>{\r\n        this.setState({[e.target.id]:e.target.value});\r\n    };\r\n\r\n    //Submits the form to Login user\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const User = {\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n        };\r\n        this.props.loginUser(User);\r\n    };\r\n\r\n\r\n    render(){\r\n        const {errors} =this.state;\r\n\r\n        return( \r\n            <div>\r\n                <br />\r\n                <div className=\"container\">\r\n                        <div style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4><b>Sign In</b></h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                            Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                         \r\n                            {/* Email Field */}\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.email||errors.emailnotfound\r\n                                      })}\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                              \r\n                                />\r\n                                <p className=\"text-danger\">\r\n                                    {errors.email}\r\n                                    {errors.emailnotfound}\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            {/* Password Field */}\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password||errors.passwordincorrect\r\n                                      })}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                         \r\n                                />\r\n                                 <p className=\"text-danger\">\r\n                                    {errors.password}\r\n                                    {errors.passwordincorrect}\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            {/* Login button*/}\r\n                            <div style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"5px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"form-group btn btn-primary btn-block\">\r\n                                    Log In\r\n                                </button>\r\n                                <Link to=\"/\">Back to Home Page</Link>\r\n                            </div>\r\n                        </form>\r\n                </div>\r\n               \r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n} \r\n\r\nLogin.propTypes = {\r\n    loginUser:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\n//Maps the state of the components to props\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n    errors:state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {loginUser}\r\n)(Login);","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            username:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            password2:\"\",\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, \r\n        // should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        \r\n        //Display errors if there is set errors if there is any errors\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onChange = e =>{\r\n        this.setState({[e.target.id]:e.target.value});\r\n    };\r\n\r\n    //Submits the form to Register a new User\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser,this.props.history);\r\n    };\r\n\r\n    render(){\r\n        const {errors} =this.state;\r\n\r\n        return( \r\n            <div>\r\n                <br />\r\n                <div className=\"container\">\r\n                        {/* Header For the register form */}\r\n                        <div style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4><b>Register</b> below</h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                            Already have an account? <Link to=\"/login\">Log in</Link>\r\n                            </p>\r\n                        </div>\r\n\r\n                        {/* Registration  Form*/}\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            {/* Username Field */}\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Username</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.username}\r\n                                    error={errors.username}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.username\r\n                                      })}\r\n                                    id=\"username\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <p className=\"text-danger\">{errors.username}</p>\r\n                            </div>\r\n                            \r\n                            {/* Email Field */}\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.email\r\n                                      })}\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                              \r\n                                />\r\n                                <p className=\"text-danger\">{errors.email}</p>\r\n                            </div>\r\n\r\n                            {/* Password Field */}\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password\r\n                                      })}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                />\r\n                                <p className=\"text-danger\">{errors.password}</p>\r\n                            </div>\r\n                            \r\n                            {/* Confirm Password Field */}\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Confirm Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={errors.password2}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password2\r\n                                      })}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                            \r\n                                />\r\n                                <p className=\"text-danger\">{errors.password2}</p>\r\n                            </div>\r\n                            \r\n                            {/* Submit Button */}\r\n                            <div style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                style={{\r\n                                    width: \"150px\",\r\n                                    borderRadius: \"5px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"1rem\"\r\n                                }}\r\n                                type=\"submit\"\r\n                                className=\"form-group btn btn-primary btn-block\"\r\n                                >\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n} \r\n\r\nRegister.propTypes ={\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state=>({\r\n    auth:state.auth,\r\n    errors:state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{registerUser})(withRouter(Register));\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Check if user is login for certain routes\r\n//If user is logged in continue to component\r\n//If user not logged in redirect to login page\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport dashboard from \"../../img/dashboard.jpg\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Dashboard extends Component{\r\n    onLogoutClick = e =>{\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n    render(){\r\n        const {user} = this.props.auth;\r\n        const button_style ={\r\n            width: \"150px\",\r\n            borderRadius: \"3px\",\r\n            letterSpacing: \"1.5px\",\r\n            marginTop: \"1rem\",\r\n            marginLeft: \"1rem\"\r\n        }\r\n        return(    \r\n          <div className=\"bg\" style={{backgroundImage:`url(${dashboard})`}} >\r\n\r\n              <div className=\"container text-center p-5\"> \r\n              <h1>Hey {user.username.split(\" \")[0]}</h1>\r\n              <p className=\"lead text-muted\">You are logged in RideBuddies! Start looking for Rides Today!</p>\r\n              {/* Find Rides and My Rides Button */}\r\n              <div className=\"col\">\r\n                <Link to=\"/rides\"\r\n                  style={button_style}\r\n                  className=\"btn btn-primary\">\r\n                  Find Rides\r\n                </Link>\r\n\r\n                <Link to=\"/rides/myRides\"\r\n                  style={button_style}\r\n                  className=\"btn btn-secondary\">\r\n                  My Rides\r\n                </Link>\r\n\r\n              </div>\r\n              \r\n\r\n              <button\r\n                style={button_style}\r\n                onClick={this.onLogoutClick}\r\n                className=\"btn btn-danger\">\r\n                Logout\r\n              </button>\r\n\r\n              </div>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n  )(Dashboard);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nconst Ride = (props) => (\r\n\t<tr>\r\n\t\t<td>{props.rides.group_Name}</td>\r\n\t\t<td>{props.rides.host_email}</td>\r\n\t\t<td>{props.rides.pickup}</td>\r\n\t\t<td>{props.rides.location}</td>\r\n\t\t<td>{props.rides.date.substring(0, 10) + ' ' + props.rides.time}</td>\r\n\t\t<td>{props.rides.seats}</td>\r\n\t\t{/* Shows delete button if user is host, otherwise show join button */}\r\n\t\t<td>\r\n\t\t\t{props.user.email === props.rides.host_email ? (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-danger btn-small mr-1\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.deleteRides(props.rides._id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tdelete\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-primary btn-small mr-1\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.joinRide(props.rides._id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tJoin\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</td>\r\n\t</tr>\r\n);\r\nclass RidesList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.deleteRides = this.deleteRides.bind(this);\r\n\t\tthis.joinRide = this.joinRide.bind(this);\r\n\t\tthis.rideList = this.rideList.bind(this);\r\n\t\tconst { user } = this.props.auth;\r\n\r\n\t\tthis.state = {\r\n\t\t\trides: [],\r\n\t\t\tuser: user,\r\n\t\t};\r\n\t}\r\n\r\n\t// Getting all avalible rides from database\r\n\tcomponentDidMount() {\r\n\t\taxios\r\n\t\t\t.get('/api/rides')\r\n\t\t\t.then((response) => {\r\n\t\t\t\tthis.setState({ rides: response.data });\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\t}\r\n\r\n\t// Function to delete a ride\r\n\tdeleteRides(id) {\r\n\t\taxios\r\n\t\t\t.delete('/api/rides/' + id, {\r\n\t\t\t\tdata: { host_email: this.state.user.email },\r\n\t\t\t})\r\n\t\t\t.then((res) => console.log(res.data))\r\n\t\t\t.catch((err) => console.log(err));\r\n\r\n\t\tthis.setState({\r\n\t\t\trides: this.state.rides.filter((rl) => rl._id !== id),\r\n\t\t});\r\n\t}\r\n\t// Fuction to join a ride\r\n\tjoinRide(id) {\r\n\t\tif (!this.props.auth.isAuthenticated) {\r\n\t\t\twindow.location = '/login';\r\n\t\t} else {\r\n\t\t\tconst passenger = {\r\n\t\t\t\tpassenger_name: this.state.user.username,\r\n\t\t\t\tpassenger_email: this.state.user.email,\r\n\t\t\t};\r\n\t\t\taxios\r\n\t\t\t\t.post('/api/rides/join/' + id, passenger)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\twindow.alert(res.data);\r\n\t\t\t\t\twindow.location = '/rides/myRides';\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => window.alert(err.response.data));\r\n\t\t}\r\n\t}\r\n\r\n\t// Function that maps each ride to a Ride Element to display \r\n\t// on the page\r\n\trideList() {\r\n\t\treturn this.state.rides.map((currRide) => {\r\n\t\t\tif (currRide) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Ride\r\n\t\t\t\t\t\trides={currRide}\r\n\t\t\t\t\t\tuser={this.state.user}\r\n\t\t\t\t\t\tdeleteRides={this.deleteRides}\r\n\t\t\t\t\t\tjoinRide={this.joinRide}\r\n\t\t\t\t\t\tkey={currRide._id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Link to=\"/\">Back to Home</Link>\r\n\t\t\t\t<h3>Rides Available</h3>\r\n\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t<thead className=\"thead-light\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Group Name</th>\r\n\t\t\t\t\t\t\t<th>Host Email</th>\r\n\t\t\t\t\t\t\t<th>Pickup</th>\r\n\t\t\t\t\t\t\t<th>Location</th>\r\n\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t<th>Seats Available</th>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>{this.rideList()}</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nRidesList.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(RidesList);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n// Custom Ride Element that display all the information of \r\n// A ride on a row of a table\r\nconst Ride = (props) => (\r\n\t<tr>\r\n\t\t<td>\r\n\t\t\t<Link to={'/rides/view/' + props.rides._id}>\r\n\t\t\t\t{props.rides.group_Name}\r\n\t\t\t</Link>\r\n\t\t</td>\r\n\t\t<td>{props.rides.host_email}</td>\r\n\t\t<td>{props.rides.pickup}</td>\r\n\t\t<td>{props.rides.location}</td>\r\n\t\t<td>{props.rides.date.substring(0, 10) + ' ' + props.rides.time}</td>\r\n\t\t<td>{props.rides.seats}</td>\r\n\t\t<td>{props.user.email === props.rides.host_email ? 'Yes' : 'No'}</td>\r\n\t\t{/* if the user is the hows show a delete button */}\r\n\t\t<td>\r\n\t\t\t{props.user.email === props.rides.host_email ? (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-danger btn-small mr-1\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.deleteRides(props.rides._id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tdelete\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</td>\r\n\t</tr>\r\n);\r\n\r\nclass MyRidesList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { user } = this.props.auth;\r\n\t\tthis.deleteRides = this.deleteRides.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\trides: [],\r\n\t\t\tuser: user,\r\n\t\t};\r\n\t}\r\n\r\n\t// Take the list of rides and filter the rides the users\r\n\t// are in \r\n\tcomponentDidMount() {\r\n\t\tconst { user } = this.props.auth;\r\n\t\r\n\t\taxios\r\n\t\t\t.get('/api/rides/myRides')\r\n\t\t\t.then((response) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trides: response.data.filter(\r\n\t\t\t\t\t\t(rl) =>\r\n\t\t\t\t\t\t\trl.passenger.some(\r\n\t\t\t\t\t\t\t\t(passengers) => passengers.passenger_email === user.email\r\n\t\t\t\t\t\t\t) || rl.host_email === user.email\r\n\t\t\t\t\t),\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\t}\r\n\r\n\t// Function to delete rides\r\n\tdeleteRides(id) {\r\n\t\taxios\r\n\t\t\t.delete('/api/rides/' + id, {\r\n\t\t\t\tdata: { host_email: this.state.user.email },\r\n\t\t\t})\r\n\t\t\t.then((res) => console.log(res.data))\r\n\t\t\t.catch((err) => console.log(err));\r\n\r\n\t\tthis.setState({\r\n\t\t\trides: this.state.rides.filter((rl) => rl._id !== id),\r\n\t\t});\r\n\t}\r\n\r\n\t// Map each rides to a Ride element\r\n\trideList() {\r\n\t\treturn this.state.rides.map((currRide) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Ride\r\n\t\t\t\t\trides={currRide}\r\n\t\t\t\t\tuser={this.state.user}\r\n\t\t\t\t\tdeleteRides={this.deleteRides}\r\n\t\t\t\t\tkey={currRide._id}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Link to=\"/\">Back to Home</Link>\r\n\t\t\t\t<h3>Your Rides</h3>\r\n\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t{/* Heading of the table */}\r\n\t\t\t\t\t<thead className=\"thead-light\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Group Name</th>\r\n\t\t\t\t\t\t\t<th>Host Email</th>\r\n\t\t\t\t\t\t\t<th>Pickup</th>\r\n\t\t\t\t\t\t\t<th>Location</th>\r\n\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t<th>Seats Available</th>\r\n\t\t\t\t\t\t\t<th>Host ?</th>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t{/* Body of table */}\r\n\t\t\t\t\t<tbody>{this.rideList()}</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nMyRidesList.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MyRidesList);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport { TimePicker } from 'antd';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport usePlacesAutocomplete, {\r\n\tgetGeocode,\r\n\tgetLatLng,\r\n} from 'use-places-autocomplete';\r\n\r\nimport {\r\n\tCombobox,\r\n\tComboboxInput,\r\n\tComboboxPopover,\r\n\tComboboxList,\r\n\tComboboxOption,\r\n} from '@reach/combobox';\r\nimport '@reach/combobox/styles.css';\r\n\r\nimport { LoadScript } from '@react-google-maps/api';\r\n\r\nconst libraries = ['places'];\r\n\r\n// Autofill and Suggestion for the Location Field\r\n// Refactor from Google Maps API\r\nconst PlacesAutocomplete = (props) => {\r\n\tconst {\r\n\t\tready,\r\n\t\tvalue,\r\n\t\tsuggestions: { status, data },\r\n\t\tsetValue,\r\n\t\tclearSuggestions,\r\n\t} = usePlacesAutocomplete({\r\n\t\trequestOptions: {\r\n\t\t\tlocation: { lat: () => 37.774929, lng: () => -122.419418 },\r\n\t\t\tradius: 200 * 1000,\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className=\"location\">\r\n\t\t\t{/* Wrapper for the search bar and Auto suggestion List */}\r\n\t\t\t<Combobox\r\n\t\t\t\tonSelect={async (address) => {\r\n\t\t\t\t\tsetValue(address, false);\r\n\t\t\t\t\tclearSuggestions();\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst results = await getGeocode({ address });\r\n\t\t\t\t\t\tconst { lat, lng } = await getLatLng(results[0]);\r\n\t\t\t\t\t\tprops.onChangeLocation(address, lat, lng);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{/* Search Bar */}\r\n\t\t\t\t<ComboboxInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetValue(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={!ready}\r\n\t\t\t\t\tplaceholder=\"Enter an address\"\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Auto Fill and Suggestion list */}\r\n\t\t\t\t<ComboboxPopover>\r\n\t\t\t\t\t<ComboboxList>\r\n\t\t\t\t\t\t{status === 'OK' &&\r\n\t\t\t\t\t\t\tdata.map(({ id, description }) => (\r\n\t\t\t\t\t\t\t\t<ComboboxOption key={id} value={description} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ComboboxList>\r\n\t\t\t\t</ComboboxPopover>\r\n\t\t\t</Combobox>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nclass AddRide extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChangeGroupName = this.onChangeGroupName.bind(this);\r\n\t\tthis.onChangeSeats = this.onChangeSeats.bind(this);\r\n\t\tthis.onChangeLocation = this.onChangeLocation.bind(this);\r\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\r\n\t\tthis.onChangePickup = this.onChangePickup.bind(this);\r\n\t\tthis.onChangeTime = this.onChangeTime.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tseats: 0,\r\n\t\t\tgroup_Name: '',\r\n\t\t\tpickup: '',\r\n\t\t\tlat: 0,\r\n\t\t\tlng: 0,\r\n\t\t\tlocation: '',\r\n\t\t\tdate: new Date(),\r\n\t\t\ttime: '',\r\n\t\t\terrors: {},\r\n\t\t};\r\n\t}\r\n\r\n\t// Set the state for seats\r\n\tonChangeSeats(e) {\r\n\t\tthis.setState({\r\n\t\t\tseats: e.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t// Set the state for group name\r\n\tonChangeGroupName(e) {\r\n\t\tthis.setState({\r\n\t\t\tgroup_Name: e.target.value,\r\n\t\t});\r\n\t}\r\n\t// Set the state for location, latitude and longitude\r\n\tonChangeLocation(address, lat, lng) {\r\n\t\tthis.setState({\r\n\t\t\tlocation: address,\r\n\t\t\tlat: lat,\r\n\t\t\tlng: lng,\r\n\t\t});\r\n\t}\r\n\t// Set the state of pickup\r\n\tonChangePickup(e) {\r\n\t\tthis.setState({\r\n\t\t\tpickup: e.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t//Set the state of Date\r\n\tonChangeDate(date) {\r\n\t\tthis.setState({\r\n\t\t\tdate: date,\r\n\t\t});\r\n\t}\r\n\r\n\t//Set the state of time\r\n\tonChangeTime(time, timeString) {\r\n\t\tthis.setState({\r\n\t\t\ttime: timeString,\r\n\t\t});\r\n\t}\r\n\r\n\t// submits the form to add a new ride\r\n\tonSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tconst { user } = this.props.auth;\r\n\t\tconsole.log(user);\r\n\r\n\t\t// Create a ride object to add to database\r\n\t\tconst ride = {\r\n\t\t\thost_email: user.email,\r\n\t\t\tseats: this.state.seats,\r\n\t\t\tgroup_Name: this.state.group_Name,\r\n\t\t\tpickup: this.state.pickup,\r\n\t\t\tlat: this.state.lat,\r\n\t\t\tlng: this.state.lng,\r\n\t\t\tlocation: this.state.location,\r\n\t\t\tdate: this.state.date,\r\n\t\t\ttime: this.state.time,\r\n\t\t};\r\n\t\t// API call to add new ride\r\n\t\taxios\r\n\t\t\t.post('/api/rides/add', ride)\r\n\t\t\t.then(() => {\r\n\t\t\t\twindow.alert('Ride created');\r\n\t\t\t\twindow.location = '/';\r\n\t\t\t})\r\n\t\t\t.catch((err) => this.setState({ errors: err.response.data }));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { errors } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<br />\r\n\t\t\t\t<h3>Create Ride Groups!</h3>\r\n\t\t\t\t{/* Add rides form */}\r\n\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\r\n\t\t\t\t\t{/* Group name Field*/}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Group Name: </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tvalue={this.state.group_Name}\r\n\t\t\t\t\t\t\tonChange={this.onChangeGroupName}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.group_Name}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Seats Field*/}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Seats: </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tvalue={this.state.seats}\r\n\t\t\t\t\t\t\tonChange={this.onChangeSeats}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p className=\"text-danger\">\r\n\t\t\t\t\t\t\t{errors.seats}\r\n\t\t\t\t\t\t\t{errors.noSeats}\r\n\t\t\t\t\t\t\t{errors.seatNaN}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Destination Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Destination: </label>\r\n\t\t\t\t\t\t<LoadScript\r\n\t\t\t\t\t\t\tgoogleMapsApiKey={process.env.REACT_APP_GOOGLE_KEY}\r\n\t\t\t\t\t\t\tlibraries={libraries}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PlacesAutocomplete onChangeLocation={this.onChangeLocation} />\r\n\t\t\t\t\t\t</LoadScript>\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.location}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Pickup Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Pickup: </label>\r\n\t\t\t\t\t\t<input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.pickup}\r\n                        onChange={this.onChangePickup}\r\n                        />\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.pickup}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Date Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Date: </label>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tselected={this.state.date}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.date}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Time Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Time: </label>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\t\t\tuse12Hours\r\n\t\t\t\t\t\t\t\tformat=\"h:mm A\"\r\n\t\t\t\t\t\t\t\tselected={this.state.time}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeTime}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p className=\"text-danger\">{errors.time}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Submit Button */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue=\"Create Ride\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAddRide.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n\terrors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddRide);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n// Passenger Element that displays passenger's name and email\r\nconst Passenger = (props) => (\r\n\t<div className=\"row\">\r\n\t\t<h5 className=\"col-md-2\">\r\n\t\t\t<small>{props.passenger.passenger_name}</small>\r\n\t\t</h5>\r\n\t\t<h5 className=\"col-sm-3\">\r\n\t\t\t<small>{props.passenger.passenger_email}</small>\r\n\t\t</h5>\r\n\t</div>\r\n);\r\n\r\nclass RidesHost extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { user } = this.props.auth;\r\n\r\n\t\tthis.state = {\r\n\t\t\trides: [],\r\n\t\t\tpassenger: [],\r\n\t\t\tuser: user,\r\n\t\t};\r\n\t}\r\n\r\n\t// Get the information of a a specific ride \r\n\tcomponentDidMount() {\r\n\t\tconst id = this.props.match.params.id;\r\n\t\taxios\r\n\t\t\t.get('/api/rides/view/' + id)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trides: response.data,\r\n\t\t\t\t\tpassenger: response.data.passenger,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\t}\r\n\r\n\t//Map all passengers to a Passenger Element\r\n\tpassengerList() {\r\n\t\treturn this.state.passenger.map((currpassenger) => {\r\n\t\t\treturn <Passenger passenger={currpassenger} key={currpassenger._id} />;\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state.passenger);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\" style={{ minHeight: '00px' }}>\r\n\t\t\t\t<Link to=\"/\">Back to Home</Link>\r\n\t\t\t\t{/* Card Showing all the information about a ride */}\r\n\t\t\t\t<div className=\"card mb-8 box-shadow\">\r\n\t\t\t\t\t{/* Header of the card */}\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<h3>{this.state.rides.group_Name}</h3>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<h5 className=\"col-md-2\">Location: </h5>\r\n\t\t\t\t\t\t\t<h5 className=\"col-md-8\">{this.state.rides.location}</h5>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<h5 className=\"col-md-2\">Departure Date:</h5>\r\n\t\t\t\t\t\t\t<h5 className=\"col-md-3\">\r\n\t\t\t\t\t\t\t\t{this.state.rides.date\r\n\t\t\t\t\t\t\t\t\t? this.state.rides.date.substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t\t\t{' ' + this.state.rides.time}\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Body of the card */}\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<h4>Passengers</h4>\r\n\t\t\t\t\t\t{this.passengerList()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nRidesHost.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(RidesHost);\r\n","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    GoogleMap,\r\n    Marker,\r\n    InfoWindow,\r\n    LoadScript,\r\n}from \"@react-google-maps/api\";\r\n\r\nimport usePlacesAutocomplete,{\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\n\r\nimport {\r\n    Combobox,\r\n    ComboboxInput,\r\n    ComboboxPopover,\r\n    ComboboxList,\r\n    ComboboxOption,\r\n  } from \"@reach/combobox\";\r\n  import \"@reach/combobox/styles.css\";\r\n\r\n\r\nimport compass from \"../../img/compass.svg\";\r\n// height and width of the map\r\nconst mapContainerStyle = {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n}\r\n\r\n// Default center of the map\r\nconst center = {\r\n    lat:37.774929,\r\n    lng:-122.419418,\r\n}\r\n\r\nconst options = {\r\n    disableDefaultUI:true,\r\n    zoomControl:true,\r\n}\r\n\r\nconst libraries = [\"places\"];\r\nconst url= \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\";\r\n\r\n// Component for Search Bar for Map\r\nconst PlacesAutocomplete  = props =>{\r\n    const{\r\n        ready,\r\n        value,\r\n        suggestions:{status,data},\r\n        setValue,\r\n        clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n        requestOptions:{\r\n            location:{ lat:()=>37.774929,lng:()=>-122.419418},\r\n            radius:200*1000,\r\n        },\r\n    });\r\n    return (\r\n        <div className='search'>\r\n            {/* Wrapper for the search bar and Auto suggestion List */}\r\n            <Combobox onSelect={ async (address)=>{\r\n                setValue(address,false);\r\n                clearSuggestions();\r\n\r\n                try{\r\n                    const results = await getGeocode({address});\r\n                    const {lat, lng} = await getLatLng(results[0]);\r\n                    props.panTo({lat,lng});\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n                \r\n                }}>\r\n\r\n                {/* Search Bar */}\r\n                <ComboboxInput \r\n                    value={value} \r\n                    onChange={(e)=>{setValue(e.target.value);}} \r\n                    disabled={!ready}\r\n                    placeholder=\"Enter an address\"\r\n                    />\r\n                    {/* Auto Fill and Suggestion list */}\r\n                    <ComboboxPopover>\r\n                        <ComboboxList>\r\n                        {status===\"OK\" && data.map(({id,description})=>(\r\n                            <ComboboxOption key={id} value={description}/>\r\n                        ))}\r\n                       </ComboboxList>\r\n                    </ComboboxPopover>\r\n            </Combobox>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n// Component for locating current location\r\nconst Locate  = props =>{\r\n   return <button className=\"locate\" onClick={()=>{\r\n       navigator.geolocation.getCurrentPosition((\r\n            position)=>{\r\n                props.panTo({\r\n                    lat: position.coords.latitude,\r\n                    lng:position.coords.longitude\r\n                });\r\n            }\r\n            ,()=>null\r\n        );\r\n   }}>\r\n            <img src={compass} alt=\"compass - locate me\" style={{width:\"40px\", height:\"40px\"}}></img>\r\n          </button>\r\n}\r\n\r\nclass RideMap extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.onMapLoad = this.onMapLoad.bind(this);\r\n        this.panTo = this.panTo.bind(this);\r\n        this.state = {\r\n                        selected:null,\r\n                        map:{},\r\n                        rides:[],\r\n                        currlat:null,\r\n                        currlong:null,\r\n                        currSelected:false,\r\n                    };\r\n    }\r\n\r\n    // Receiving all the rides avalible from the backend\r\n    componentDidMount(){\r\n        axios.get('/api/rides')\r\n            .then(response =>{this.setState({rides: response.data});\r\n            })\r\n            .catch((error)=> console.log(error));\r\n    }\r\n\r\n    // Load the map object\r\n    onMapLoad(map){\r\n        this.setState({\r\n            map:map\r\n        })\r\n    }\r\n\r\n  \r\n    // Function to zoom to a certain location on the map\r\n   panTo({lat,lng}){\r\n        this.state.map.panTo({lat,lng});\r\n        this.state.map.setZoom(15);\r\n        this.setState({currlat:lat,currlong:lng});\r\n   }\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                {/* Wrapper to load the scripts for the map */}\r\n                <LoadScript \r\n                    googleMapsApiKey={process.env.REACT_APP_GOOGLE_KEY}\r\n                    libraries={libraries}\r\n                >\r\n                    {/* Search bar and Current Location button */}\r\n                    <PlacesAutocomplete panTo={this.panTo}/>\r\n                    <Locate panTo={this.panTo}/>\r\n\r\n                    <h2>Rides Locations</h2>\r\n                    <GoogleMap mapContainerStyle={mapContainerStyle} \r\n                        zoom={8}\r\n                        center={center}\r\n                        options={options}\r\n                        onLoad={this.onMapLoad}\r\n                    >\r\n                        {/* Markers for all avalible Rides */}\r\n                        {this.state.rides.map(currRide => \r\n                            <Marker key={currRide.id} \r\n                                    position={{lat:currRide.lat,lng:currRide.lng}}\r\n                                    onClick={()=>this.setState({selected:currRide})}\r\n                                    />)}\r\n                        {/* Marker for current location if zoomed */}\r\n                        {this.state.currlat?\r\n                            <Marker key={1} \r\n                                   position={{lat:this.state.currlat,lng:this.state.currlong}}\r\n                                   icon={{url:url}}\r\n                                   onClick={()=>this.setState({currSelected:true})}\r\n                                    />:\"\"}\r\n\r\n                        {/* Info Window indicating your location when zoom */}\r\n                        {this.state.currSelected?(\r\n                        <InfoWindow \r\n                            position={{lat:this.state.currlat,lng:this.state.currlong}} \r\n                            onCloseClick={()=>this.setState({currSelected:false})}\r\n                            >\r\n                                <h4>You are here!</h4>\r\n                        </InfoWindow>):null}\r\n\r\n                        {/* Info Window for each rides */}\r\n                        {this.state.selected? \r\n                        (<InfoWindow \r\n                            position={{lat:this.state.selected.lat,lng:this.state.selected.lng}} \r\n                            onCloseClick={()=>this.setState({selected:null})}>\r\n                             <div className=\"info-box\">\r\n                                <p className=\"info-title\">{this.state.selected.group_Name}</p>\r\n                                <p className=\"info-subtitle\">Seats: {this.state.selected.seats}</p>\r\n                                <p className=\"info-subtitle\">Where:</p>\r\n                                <p className=\"info-text\">{this.state.selected.location}</p>\r\n                                <p className=\"info-subtitle\">Pickup:</p>\r\n                                <p className=\"info-text\">{this.state.selected.pickup}</p>\r\n                                <p className=\"info-subtitle\">When:</p>\r\n                                <p className=\"info-text\">{this.state.selected.date.substring(0,10) + \" \"+ this.state.selected.time}</p>\r\n                                \r\n                            </div>\r\n                        </InfoWindow>):null}\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default RideMap;","import React from 'react';\r\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport './index.css'\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Navbar from \"./components/navbar.component\";\r\nimport Landing from './components/pages/Landing.component';\r\nimport Login from './components/Auth/Login.components';\r\nimport Register from './components/Auth/Register.components';\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\n\r\nimport RidesList from \"./components/pages/list-rides.component\";\r\nimport MyRidesList from \"./components/pages/my-rides.component\";\r\nimport AddRide from \"./components/pages/add-rides.component\";\r\nimport RidesHost from \"./components/pages/ride-host.component\"\r\nimport RideMap from \"./components/pages/map.component\"\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  const decoded = jwt_decode(token);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  const currentTime = Date.now() / 1000; \r\n\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(logoutUser());\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router >\r\n        <Navbar/>\r\n            <Route path=\"/\" exact component={Landing}></Route>\r\n            <Route path=\"/register\" exact component={Register}></Route>\r\n            <Route path=\"/login\" exact component={Login}></Route>\r\n            <Route path=\"/rides\" exact component={RidesList}></Route>\r\n            <Route path=\"/rides/view/:id\" exact component={RidesHost}></Route>\r\n            <Route path=\"/map\" exact component={RideMap}></Route>\r\n            <PrivateRoute path=\"/rides/add\" exact component={AddRide}></PrivateRoute>\r\n            <PrivateRoute path=\"/rides/myRides\" exact component={MyRidesList}></PrivateRoute>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            \r\n       \r\n      </Router>   \r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}