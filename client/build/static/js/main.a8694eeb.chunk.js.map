{"version":3,"sources":["img/landing.jpg","img/dashboard.jpg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/navbar.component.js","components/pages/Landing.component.js","components/Auth/Login.components.js","components/Auth/Register.components.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","components/pages/list-rides.component.js","components/pages/my-rides.component.js","components/pages/add-rides.component.js","components/pages/ride-host.component.js","App.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navbar","onLogoutClick","e","preventDefault","props","isLoggedIn","this","className","to","onClick","Component","connect","Landing","history","push","button_style","width","letterSpacing","borderRadius","margin","style","backgroundImage","background","Login","onChange","setState","target","id","value","onSubmit","User","email","password","loginUser","username","nextProps","paddingLeft","noValidate","error","classnames","invalid","emailnotfound","passwordincorrect","marginTop","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","Register","newUser","password2","registerUser","withRouter","component","rest","render","Dashboard","marginLeft","dashboard","split","Ride","rides","group_Name","host_email","location","date","substring","time","seats","joinRide","_id","deleteRides","RidesList","bind","rideList","get","console","log","delete","filter","rl","rider","rider_email","window","alert","map","currRide","key","MyRidesList","some","riders","AddRide","onChangeGroupName","onChangeSeats","onChangeLocation","onChangeDate","onChangeTime","Date","timeString","ride","noSeats","selected","use12Hours","format","Rider","RidesHost","match","params","currRider","minHeight","riderList","jwtToken","currentTime","now","exp","href","App","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8694eeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.22b51f76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.6ed11d8e.jpg\";","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  \r\n  axios\r\n    .post(\"/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n  )\r\n);\r\nexport default store;","import React,{Component} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\n\r\nclass Navbar extends Component{\r\n\r\n    onLogoutClick = e =>{\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render(){\r\n        const isLoggedIn = this.props.auth.isAuthenticated;\r\n        \r\n        return(\r\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <Link to=\"/\" className=\"navbar-brand\">RideBuddies</Link>\r\n                <div className = \"collpase navbar-collapse\">\r\n                    <ul className = \"navbar-nav mr-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/rides\" className=\"nav-link\">Find Rides</Link>\r\n                        </li>\r\n                        {isLoggedIn?\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/rides/add\" className=\"nav-link\">Create Rides</Link>\r\n                            </li>:\"\"\r\n                        }\r\n                        \r\n\r\n                        {isLoggedIn? \r\n                                <li className=\"navbar-item\">\r\n                                    <Link to=\"/rides/myRides\" className=\"nav-link\">My Rides</Link>\r\n                                </li>:\r\n                                \"\"\r\n                            }\r\n                       \r\n                        \r\n                    </ul>\r\n\r\n                    <ul className = \"navbar-nav navbar-right\">\r\n                      \r\n                        <li>\r\n                            {isLoggedIn?\r\n                                <button \r\n                                onClick={this.onLogoutClick}\r\n                                className=\"btn btn-danger btn-small btn-nav navbar-right\">Log out</button>:\r\n                                <Link to=\"/login\" type=\"button\" \r\n                                className=\"btn btn-primary btn-small btn-nav navbar-right\">Log In</Link>\r\n                            }\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n} \r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser },\r\n)(Navbar);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport background from \"../../img/landing.jpg\"\r\n\r\n\r\n\r\nclass Landing extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    render(){\r\n        const button_style = {\r\n            width: \"140px\",\r\n            letterSpacing: \"1.5px\",\r\n            borderRadius:\"5px\",\r\n            margin: \"5px\"\r\n            }\r\n        return( \r\n                <div className=\"bg\" style={{backgroundImage:`url(${background})`}} >\r\n                    <div className=\"container text-center p-5\"> \r\n                        <h1>Welcome</h1>\r\n                        <h5><bold>Welcome to RideBuddies. Here you can organize and find a rides that you need.</bold></h5>\r\n                        <p>\r\n                            <Link \r\n                                to=\"/register\" \r\n                                style={button_style}\r\n                                className=\"btn btn-primary my-2\">Register</Link>\r\n\r\n\r\n                            <Link \r\n                                to=\"/login\" \r\n                                style={button_style}\r\n                                className=\"btn btn-secondary my-2\">Login</Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n             \r\n                \r\n            \r\n           \r\n        )\r\n    }\r\n} \r\n\r\n\r\nLanding.propTypes = {\r\n    auth:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Landing);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            username:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.auth.isAuthenticated){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e =>{\r\n        this.setState({[e.target.id]:e.target.value});\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const User = {\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n        };\r\n        this.props.loginUser(User);\r\n    };\r\n\r\n    render(){\r\n        const {errors} =this.state;\r\n\r\n        return( \r\n            <div>\r\n                <br />\r\n                <div className=\"container\">\r\n                        <div style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4><b>Sign In</b></h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                            Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                         \r\n\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.email||errors.emailnotfound\r\n                                      })}\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                              \r\n                                />\r\n                                <p className=\"text-danger\">\r\n                                    {errors.email}\r\n                                    {errors.emailnotfound}\r\n                                </p>\r\n                            </div>\r\n                            \r\n\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password||errors.passwordincorrect\r\n                                      })}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                         \r\n                                />\r\n                                 <p className=\"text-danger\">\r\n                                    {errors.password}\r\n                                    {errors.passwordincorrect}\r\n                                </p>\r\n                            </div>\r\n                            \r\n\r\n                            <div style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"5px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"form-group btn btn-primary btn-block\">\r\n                                    Log In\r\n                                </button>\r\n                                <Link to=\"/\">Back to Home Page</Link>\r\n                            </div>\r\n                        </form>\r\n                </div>\r\n               \r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n} \r\n\r\nLogin.propTypes = {\r\n    loginUser:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n    errors:state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {loginUser}\r\n)(Login);","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            username:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            password2:\"\",\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        \r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onChange = e =>{\r\n        this.setState({[e.target.id]:e.target.value});\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser,this.props.history);\r\n    };\r\n\r\n    render(){\r\n        const {errors} =this.state;\r\n\r\n        return( \r\n            <div>\r\n                <br />\r\n                <div className=\"container\">\r\n                        <div style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4><b>Register</b> below</h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                            Already have an account? <Link to=\"/login\">Log in</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Username</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.username}\r\n                                    error={errors.username}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.username\r\n                                      })}\r\n                                    id=\"username\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <p className=\"text-danger\">{errors.username}</p>\r\n                            </div>\r\n                            \r\n\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.email\r\n                                      })}\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                              \r\n                                />\r\n                                <p className=\"text-danger\">{errors.email}</p>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password\r\n                                      })}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                />\r\n                                <p className=\"text-danger\">{errors.password}</p>\r\n                            </div>\r\n                            \r\n\r\n                            <div className=\"form-group col s12\">\r\n                                <label>Confirm Password</label>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={errors.password2}\r\n                                    className={classnames(\"form-control\", {\r\n                                        invalid: errors.password2\r\n                                      })}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                            \r\n                                />\r\n                                <p className=\"text-danger\">{errors.password2}</p>\r\n                            </div>\r\n\r\n                            <div style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                style={{\r\n                                    width: \"150px\",\r\n                                    borderRadius: \"5px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"1rem\"\r\n                                }}\r\n                                type=\"submit\"\r\n                                className=\"form-group btn btn-primary btn-block\"\r\n                                >\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n} \r\n\r\nRegister.propTypes ={\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state=>({\r\n    auth:state.auth,\r\n    errors:state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{registerUser})(withRouter(Register));\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport dashboard from \"../../img/dashboard.jpg\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Dashboard extends Component{\r\n    onLogoutClick = e =>{\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n    render(){\r\n        const {user} = this.props.auth;\r\n        const button_style ={\r\n            width: \"150px\",\r\n            borderRadius: \"3px\",\r\n            letterSpacing: \"1.5px\",\r\n            marginTop: \"1rem\",\r\n            marginLeft: \"1rem\"\r\n        }\r\n        return(    \r\n          <div className=\"bg\" style={{backgroundImage:`url(${dashboard})`}} >\r\n\r\n              <div className=\"container text-center p-5\"> \r\n              <h1>Hey {user.username.split(\" \")[0]}</h1>\r\n              <p className=\"lead text-muted\">You are logged in RideBuddies! Start looking for Rides Today!</p>\r\n              <div className=\"col\">\r\n                <Link to=\"/rides\"\r\n                  style={button_style}\r\n                  className=\"btn btn-primary\">\r\n                  Find Rides\r\n                </Link>\r\n\r\n                <Link to=\"/rides/myRides\"\r\n                  style={button_style}\r\n                  className=\"btn btn-secondary\">\r\n                  My Rides\r\n                </Link>\r\n\r\n              </div>\r\n              \r\n\r\n              <button\r\n                style={button_style}\r\n                onClick={this.onLogoutClick}\r\n                className=\"btn btn-danger\">\r\n                Logout\r\n              </button>\r\n\r\n              </div>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n  )(Dashboard);","import React,{Component} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst Ride = props => (\r\n    <tr>\r\n        <td>{props.rides.group_Name}</td>\r\n        <td>{props.rides.host_email}</td>\r\n        <td>{props.rides.location}</td>\r\n        <td>{props.rides.date.substring(0,10)+ \" \"+\r\n            props.rides.time}</td>\r\n        <td>{props.rides.seats}</td>\r\n        <td>\r\n            <button \r\n                className=\"btn btn-primary btn-small mr-1\" \r\n                onClick={()=>{props.joinRide(props.rides._id)}}>Join</button>\r\n\r\n            {props.user.email===props.rides.host_email?\r\n            <button className=\"btn btn-danger btn-small mr-1\" \r\n                onClick={()=>{props.deleteRides(props.rides._id)}}>delete</button>: \"\"\r\n            }\r\n        </td>\r\n    </tr>\r\n)\r\nclass RidesList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.deleteRides = this.deleteRides.bind(this);\r\n        this.joinRide = this.joinRide.bind(this);\r\n        this.rideList = this.rideList.bind(this);\r\n        const {user} = this.props.auth;\r\n        \r\n        this.state = {\r\n                        rides:[],\r\n                        user:user\r\n                    };\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/rides')\r\n            .then(response =>{this.setState({rides: response.data});\r\n            })\r\n            .catch((error)=> console.log(error));\r\n    }\r\n\r\n    deleteRides(id){\r\n        \r\n        \r\n        axios.delete('/rides/'+id,{data:{host_email:this.state.user.email}})\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err));\r\n\r\n        this.setState({\r\n            rides: this.state.rides.filter(rl => rl._id !==id)\r\n        })\r\n    }\r\n\r\n    joinRide(id){        \r\n        if(!this.props.auth.isAuthenticated){\r\n            window.location = '/login';\r\n        }else{\r\n            const rider = {\r\n                rider: this.state.user.username,\r\n                rider_email: this.state.user.email\r\n            }\r\n            axios.post('/rides/join/'+id,rider)\r\n                .then(res => {\r\n                    window.alert(res.data);\r\n                    window.location = '/rides';\r\n                })\r\n                .catch(err => window.alert(err.response.data));\r\n    \r\n        }\r\n\r\n\r\n    }\r\n\r\n    rideList(){\r\n     \r\n        return this.state.rides.map(currRide =>{\r\n            if(currRide){\r\n                return <Ride rides = {currRide} user={this.state.user} deleteRides= {this.deleteRides} joinRide = {this.joinRide} key={currRide._id}/>\r\n            }else{\r\n                return\"\";\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n              <Link to=\"/\">Back to Home</Link>\r\n              <h3>Rides Available</h3>\r\n              <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>Group Name</th>\r\n                        <th>Host Email</th>\r\n                        <th>Location</th>\r\n                        <th>Date</th>\r\n                        <th>Seats Available</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.rideList()}\r\n                    \r\n\r\n                </tbody>\r\n              </table>\r\n              \r\n          </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nRidesList.propTypes = {\r\n    auth:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(RidesList);","import React,{Component} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Ride = props => (\r\n    <tr>\r\n        <td><Link to ={\"/rides/view/\"+props.rides._id}>{props.rides.group_Name}</Link></td>\r\n        <td>{props.rides.host_email}</td>\r\n        <td>{props.rides.location}</td>\r\n        <td>{props.rides.date.substring(0,10)+ \" \"+\r\n            props.rides.time}</td>\r\n        <td>{props.rides.seats}</td>\r\n        <td>{props.user.email===props.rides.host_email? \"Yes\": \"No\"}</td>\r\n        <td>\r\n            {props.user.email===props.rides.host_email?\r\n                <button className=\"btn btn-danger btn-small mr-1\" \r\n                    onClick={()=>{props.deleteRides(props.rides._id)}}>delete</button>: \"\"}\r\n        </td>\r\n    </tr>\r\n)\r\nclass MyRidesList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {user} = this.props.auth;\r\n        this.deleteRides = this.deleteRides.bind(this);\r\n\r\n        this.state = {\r\n                        rides:[],\r\n                        user:user,\r\n                    };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {user} = this.props.auth;\r\n       \r\n        axios.get('/rides/myRides')\r\n            .then(response =>{                \r\n                this.setState({\r\n                    rides: response.data.filter(rl =>rl.rider.some(riders =>riders.rider_email===user.email))\r\n                })\r\n            })\r\n            .catch((error)=> console.log(error));\r\n    }\r\n\r\n    deleteRides(id){\r\n        \r\n        \r\n        axios.delete('/rides/'+id,{data:{host_email:this.state.user.email}})\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err));\r\n\r\n        this.setState({\r\n            rides: this.state.rides.filter(rl => rl._id !==id)\r\n        })\r\n    }\r\n\r\n    rideList(){\r\n        return this.state.rides.map(currRide =>{\r\n            return <Ride rides = {currRide} user={this.state.user} deleteRides= {this.deleteRides} key={currRide._id}/>;\r\n\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n              <Link to=\"/\">Back to Home</Link>\r\n              <h3>Your Rides</h3>\r\n              <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>Group Name</th>\r\n                        <th>Host Email</th>\r\n                        <th>Location</th>\r\n                        <th>Date</th>\r\n                        <th>Seats Available</th>\r\n                        <th>Host ?</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.rideList()}\r\n                </tbody>\r\n              </table>\r\n              \r\n          </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nMyRidesList.propTypes = {\r\n    auth:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(MyRidesList);","import React,{Component} from \"react\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from 'react-datepicker';\r\nimport {TimePicker} from 'antd';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'antd/dist/antd.css';\r\n\r\nclass AddRide extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeGroupName = this.onChangeGroupName.bind(this);\r\n        this.onChangeSeats = this.onChangeSeats.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onChangeTime = this.onChangeTime.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            seats:0,\r\n            group_Name: '',\r\n            location: '',\r\n            date: new Date(),\r\n            time:'',\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n    onChangeSeats(e){\r\n        this.setState({\r\n            seats: e.target.value\r\n        });\r\n    }\r\n    onChangeGroupName(e){\r\n        this.setState({\r\n            group_Name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeLocation(e){\r\n        this.setState({\r\n            location: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeDate(date){\r\n        this.setState({\r\n            date: date\r\n        });\r\n    }\r\n\r\n    onChangeTime(time,timeString){\r\n        this.setState({\r\n            time: timeString\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const {user} = this.props.auth;\r\n        console.log(user);\r\n        \r\n        const ride = {\r\n            host_email: user.email,\r\n            seats: this.state.seats,\r\n            group_Name: this.state.group_Name,\r\n            location: this.state.location,\r\n            date: this.state.date,\r\n            time: this.state.time\r\n        }\r\n\r\n        axios.post('/rides/add',ride)\r\n        .then(() =>window.location = '/rides')\r\n        .catch(err => this.setState({errors:err.response.data}));\r\n        \r\n    \r\n    }\r\n\r\n\r\n    render(){\r\n        const {errors} =this.state;\r\n     \r\n        return(\r\n           \r\n            <div className=\"container\">\r\n                <br />\r\n                <h3>You are on the Create Exercises Component!</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Group Name: </label>\r\n                        <input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.group_Name}\r\n                        onChange={this.onChangeGroupName}\r\n                        />\r\n                         <p className=\"text-danger\">{errors.group_Name}</p>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Seats: </label>\r\n                        <input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.seats}\r\n                        onChange={this.onChangeSeats}\r\n                        />\r\n                        <p className=\"text-danger\">\r\n                            {errors.seats}\r\n                            {errors.noSeats}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>destination: </label>\r\n                        <input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.location}\r\n                        onChange={this.onChangeLocation}\r\n                        />\r\n                        <p className=\"text-danger\">{errors.location}</p>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date: </label>\r\n                        <div>\r\n                        <DatePicker\r\n                            selected={this.state.date}\r\n                            onChange={this.onChangeDate} \r\n                        />\r\n                        </div>\r\n                        <p className=\"text-danger\">{errors.date}</p>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Time: </label>\r\n                        <div>\r\n                        <TimePicker \r\n                            use12Hours \r\n                            format=\"h:mm A\" \r\n                            selected={this.state.time}\r\n                            onChange={this.onChangeTime} \r\n                            />\r\n                            <p className=\"text-danger\">{errors.time}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Ride\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nAddRide.propTypes = {\r\n    auth:PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n    errors:state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(AddRide);","import React,{Component} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst Rider = props => (\r\n    <div className=\"row\">\r\n        <h5  className=\"col-md-2\"><small>{props.rider.rider}</small></h5>\r\n        <h5 className=\"col-sm-3\"><small>{props.rider.rider_email}</small></h5>\r\n    </div>\r\n)\r\n\r\n\r\n\r\nclass RidesHost extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {user} = this.props.auth;\r\n\r\n        this.state = {\r\n                        rides:[],\r\n                        rider:[],\r\n                        user:user,\r\n                    };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = this.props.match.params.id;\r\n        axios.get('/rides/view/'+id)\r\n            .then(response =>{\r\n                this.setState(\r\n                {\r\n                    rides: response.data,\r\n                    rider: response.data.rider\r\n                })\r\n                \r\n            })\r\n            .catch((error)=> console.log(error));\r\n                    \r\n    }\r\n\r\n    riderList(){\r\n        return this.state.rider.map(currRider =>{\r\n            return <Rider rider = {currRider} key={currRider._id}/>;\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(this.state.rider);\r\n        \r\n        return(\r\n\r\n                <div className=\"container\"  style={{minHeight:\"00px\"}}>\r\n                    <Link to=\"/\">Back to Home</Link>\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <div className=\"card-header\">\r\n                            <h2>{this.state.rides.group_Name}</h2>\r\n                            <div className=\"row\">\r\n                                <h5 className=\"col-md-2\">Location: </h5>\r\n                                <h5 className=\"col-md-8\">{this.state.rides.location}</h5>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <h5 className=\"col-md-2\">Departure Date:</h5>\r\n                                <h5 className=\"col-md-3\">{this.state.rides.date?this.state.rides.date.substring(0,10):\"\"}\r\n                                    {this.state.rides.time}\r\n                                </h5>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"card-body\">\r\n                            <h4>Riders</h4>\r\n                            {this.riderList()}\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n          \r\n          \r\n          \r\n        )\r\n    }\r\n}\r\n\r\nRidesHost.propTypes = {\r\n    auth:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(RidesHost);","import React from 'react';\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport './index.css'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/navbar.component\";\nimport Landing from './components/pages/Landing.component';\nimport Login from './components/Auth/Login.components';\nimport Register from './components/Auth/Register.components';\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport RidesList from \"./components/pages/list-rides.component\";\nimport MyRidesList from \"./components/pages/my-rides.component\";\nimport AddRide from \"./components/pages/add-rides.component\";\nimport RidesHost from \"./components/pages/ride-host.component\"\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  const decoded = jwt_decode(token);\n  store.dispatch(setCurrentUser(decoded));\n  const currentTime = Date.now() / 1000; \n\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = \"./login\";\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar/>\n            <Route path=\"/\" exact component={Landing}></Route>\n            <Route path=\"/register\" exact component={Register}></Route>\n            <Route path=\"/login\" exact component={Login}></Route>\n            <Route path=\"/rides\" exact component={RidesList}></Route>\n            <Route path=\"/rides/view/:id\" exact component={RidesHost}></Route>\n            <PrivateRoute path=\"/rides/add\" exact component={AddRide}></PrivateRoute>\n            <PrivateRoute path=\"/rides/myRides\" exact component={MyRidesList}></PrivateRoute>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            \n       \n      </Router>   \n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}