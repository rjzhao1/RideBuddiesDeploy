{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricky\\\\Documents\\\\CS Stuff\\\\Projects\\\\RideBuddies\\\\client\\\\src\\\\components\\\\pages\\\\map.component.js\";\nimport React, { Component } from 'react';\nimport { GoogleMap, Marker, InfoWindow, LoadScript } from \"@react-google-maps/api\"; // import usePlacesAutocomplete,{\n//     getGeocode,\n//     getLatLng,\n// } from \"use-places-autocomplete\"\n\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst center = {\n  lat: 37.774929,\n  lng: -122.419418\n};\nconst options = {\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nclass RideMap extends Component {\n  constructor(props) {\n    super(props);\n    this.setMarker = this.setMarker.bind(this);\n    this.state = {\n      markers: [],\n      selected: null\n    };\n  }\n\n  setMarker(e) {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n    this.setState({\n      markers: [...this.state.markers, {\n        lat: lat,\n        lng: lng,\n        time: new Date()\n      }]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Rides\"), /*#__PURE__*/React.createElement(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 8,\n      center: center,\n      options: options,\n      onClick: event => this.setMarker(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.state.markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n      key: marker.time.toISOString(),\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      onClick: () => this.setState({\n        selected: marker\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    })), this.state.selected ? /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: this.state.selected.lat,\n        lng: this.state.selected.lng\n      },\n      onCloseClick: this.state.selected = null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, \"Rides Here\"))) : null)));\n  }\n\n}\n\nexport default RideMap;","map":{"version":3,"sources":["C:/Users/Ricky/Documents/CS Stuff/Projects/RideBuddies/client/src/components/pages/map.component.js"],"names":["React","Component","GoogleMap","Marker","InfoWindow","LoadScript","mapContainerStyle","height","width","center","lat","lng","options","disableDefaultUI","zoomControl","RideMap","constructor","props","setMarker","bind","state","markers","selected","e","latLng","setState","time","Date","render","process","env","REACT_APP_GOOGLE_KEY","event","map","marker","toISOString"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {\r\n    GoogleMap,\r\n    Marker,\r\n    InfoWindow,\r\n    LoadScript,\r\n}from \"@react-google-maps/api\"\r\n\r\n// import usePlacesAutocomplete,{\r\n//     getGeocode,\r\n//     getLatLng,\r\n// } from \"use-places-autocomplete\"\r\n\r\nconst mapContainerStyle = {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n}\r\n\r\nconst center = {\r\n    lat:37.774929,\r\n    lng:-122.419418,\r\n}\r\n\r\nconst options = {\r\n    disableDefaultUI:true,\r\n    zoomControl:true,\r\n}\r\n\r\n\r\n\r\nclass RideMap extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.setMarker = this.setMarker.bind(this);\r\n        this.state = {\r\n                        markers:[],\r\n                        selected:null,\r\n                    };\r\n    }\r\n\r\n    setMarker(e){\r\n        const lat = e.latLng.lat();\r\n        const lng = e.latLng.lng();\r\n        this.setState({\r\n            markers:[...this.state.markers,{\r\n                        lat:lat,\r\n                        lng:lng,\r\n                        time: new Date()}]\r\n        })\r\n        \r\n    }\r\n    \r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <LoadScript \r\n                    googleMapsApiKey={process.env.REACT_APP_GOOGLE_KEY}\r\n                >\r\n                    <h2>Rides</h2>\r\n                    <GoogleMap mapContainerStyle={mapContainerStyle} \r\n                        zoom={8}\r\n                        center={center}\r\n                        options={options}\r\n                        onClick={event=>this.setMarker(event)}\r\n                    >\r\n                        {this.state.markers.map(marker => \r\n                            <Marker key={marker.time.toISOString()} \r\n                                    position={{lat:marker.lat,lng:marker.lng}}\r\n                                    onClick={()=>this.setState({selected:marker})}\r\n                                    />)}\r\n                        {this.state.selected? \r\n                        (<InfoWindow \r\n                            position={{lat:this.state.selected.lat,lng:this.state.selected.lng}} \r\n                            onCloseClick={this.state.selected=null}>\r\n                            <div>\r\n                                <h3>Rides Here</h3>\r\n                            </div>\r\n                        </InfoWindow>):null}\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n           \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default RideMap;"]},"metadata":{},"sourceType":"module"}