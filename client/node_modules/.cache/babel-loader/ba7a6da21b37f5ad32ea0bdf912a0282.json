{"ast":null,"code":"import axios from\"axios\";import setAuthToken from\"../utils/setAuthToken\";import jwt_decode from\"jwt-decode\";import{GET_ERRORS,SET_CURRENT_USER,USER_LOADING}from\"./types\";// Register User\nexport var registerUser=function registerUser(userData,history){return function(dispatch){axios.post(\"/api/users/register\",userData).then(function(res){return history.push(\"/login\");}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Login - get user token\nexport var loginUser=function loginUser(userData){return function(dispatch){axios.post(\"/api/users/login\",userData).then(function(res){//Store token into localStorage\nvar token=res.data.token;localStorage.setItem(\"jwtToken\",token);setAuthToken(token);var decoded=jwt_decode(token);//calls setCurrent User to set the type \n//to SET_CURRENT_USER and update the current user\ndispatch(setCurrentUser(decoded));}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};export var setCurrentUser=function setCurrentUser(decoded){return{type:SET_CURRENT_USER,payload:decoded};};export var setUserLoading=function setUserLoading(){return{type:USER_LOADING};};export var logoutUser=function logoutUser(){return function(dispatch){localStorage.removeItem(\"jwtToken\");setAuthToken(false);dispatch(setCurrentUser({}));};};","map":{"version":3,"sources":["C:/Users/Ricky/Projects/RideBuddiesDeploy/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OACEC,UADF,CAEEC,gBAFF,CAGEC,YAHF,KAIO,SAJP,CAMA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAWC,OAAX,QAAuB,UAAAC,QAAQ,CAAI,CAE7DT,KAAK,CACFU,IADH,CACQ,qBADR,CAC+BH,QAD/B,EAEGI,IAFH,CAEQ,SAAAC,GAAG,QAAIJ,CAAAA,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ,EAFX,EAGGC,KAHH,CAGS,SAAAC,GAAG,QACRN,CAAAA,QAAQ,CAAC,CACPO,IAAI,CAAEb,UADC,CAEPc,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFf,CAAD,CADA,EAHZ,EASD,CAX2B,EAArB,CAYP;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAb,QAAQ,QAAI,UAAAE,QAAQ,CAAI,CAC/CT,KAAK,CACFU,IADH,CACQ,kBADR,CAC4BH,QAD5B,EAEGI,IAFH,CAEQ,SAAAC,GAAG,CAAI,CAEX;AAFW,GAGHS,CAAAA,KAHG,CAGOT,GAAG,CAACO,IAHX,CAGHE,KAHG,CAIXC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCF,KAAjC,EAEApB,YAAY,CAACoB,KAAD,CAAZ,CAEA,GAAMG,CAAAA,OAAO,CAAGtB,UAAU,CAACmB,KAAD,CAA1B,CAEA;AACA;AACAZ,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR,CACD,CAfH,EAgBGV,KAhBH,CAgBS,SAAAC,GAAG,QACRN,CAAAA,QAAQ,CAAC,CACPO,IAAI,CAAEb,UADC,CAEPc,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFf,CAAD,CADA,EAhBZ,EAsBD,CAvBgC,EAA1B,CAyBP,MAAO,IAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAD,OAAO,CAAI,CACvC,MAAO,CACLR,IAAI,CAAEZ,gBADD,CAELa,OAAO,CAAEO,OAFJ,CAAP,CAID,CALM,CAOP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAO,CACLV,IAAI,CAAEX,YADD,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMsB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,UAAAlB,QAAQ,CAAI,CAE1Ca,YAAY,CAACM,UAAb,CAAwB,UAAxB,EAEA3B,YAAY,CAAC,KAAD,CAAZ,CAEAQ,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR,CACD,CAPyB,EAAnB","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  \r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) \r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n\r\n      //Store token into localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      setAuthToken(token);\r\n\r\n      const decoded = jwt_decode(token);\r\n\r\n      //calls setCurrent User to set the type \r\n      //to SET_CURRENT_USER and update the current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n\r\n  localStorage.removeItem(\"jwtToken\");\r\n\r\n  setAuthToken(false);\r\n\r\n  dispatch(setCurrentUser({}));\r\n};"]},"metadata":{},"sourceType":"module"}