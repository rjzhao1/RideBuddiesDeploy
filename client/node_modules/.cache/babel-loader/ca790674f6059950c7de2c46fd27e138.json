{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _regeneratorRuntime from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{Component}from'react';import axios from'axios';import{connect}from'react-redux';import DatePicker from'react-datepicker';import{TimePicker}from'antd';import'react-datepicker/dist/react-datepicker.css';import'antd/dist/antd.css';import usePlacesAutocomplete,{getGeocode,getLatLng}from'use-places-autocomplete';import{Combobox,ComboboxInput,ComboboxPopover,ComboboxList,ComboboxOption}from'@reach/combobox';import'@reach/combobox/styles.css';import{LoadScript}from'@react-google-maps/api';var libraries=['places'];// Autofill and Suggestion for the Location Field\n// Refactor from Google Maps API\nvar PlacesAutocomplete=function PlacesAutocomplete(props){var _usePlacesAutocomplet=usePlacesAutocomplete({requestOptions:{location:{lat:function lat(){return 37.774929;},lng:function lng(){return-122.419418;}},radius:200*1000}}),ready=_usePlacesAutocomplet.ready,value=_usePlacesAutocomplet.value,_usePlacesAutocomplet2=_usePlacesAutocomplet.suggestions,status=_usePlacesAutocomplet2.status,data=_usePlacesAutocomplet2.data,setValue=_usePlacesAutocomplet.setValue,clearSuggestions=_usePlacesAutocomplet.clearSuggestions;return/*#__PURE__*/React.createElement(\"div\",{className:\"location\"},/*#__PURE__*/React.createElement(Combobox,{onSelect:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address){var results,_yield$getLatLng,lat,lng;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setValue(address,false);clearSuggestions();_context.prev=2;_context.next=5;return getGeocode({address:address});case 5:results=_context.sent;_context.next=8;return getLatLng(results[0]);case 8:_yield$getLatLng=_context.sent;lat=_yield$getLatLng.lat;lng=_yield$getLatLng.lng;props.onChangeLocation(address,lat,lng);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function(_x){return _ref.apply(this,arguments);};}()},/*#__PURE__*/React.createElement(ComboboxInput,{value:value,onChange:function onChange(e){setValue(e.target.value);},disabled:!ready,placeholder:\"Enter an address\"}),/*#__PURE__*/React.createElement(ComboboxPopover,null,/*#__PURE__*/React.createElement(ComboboxList,null,status==='OK'&&data.map(function(_ref2){var id=_ref2.id,description=_ref2.description;return/*#__PURE__*/React.createElement(ComboboxOption,{key:id,value:description});})))));};var AddRide=/*#__PURE__*/function(_Component){_inherits(AddRide,_Component);var _super=_createSuper(AddRide);function AddRide(props){var _this;_classCallCheck(this,AddRide);_this=_super.call(this,props);_this.onChangeGroupName=_this.onChangeGroupName.bind(_assertThisInitialized(_this));_this.onChangeSeats=_this.onChangeSeats.bind(_assertThisInitialized(_this));_this.onChangeLocation=_this.onChangeLocation.bind(_assertThisInitialized(_this));_this.onChangeDate=_this.onChangeDate.bind(_assertThisInitialized(_this));_this.onChangePickup=_this.onChangePickup.bind(_assertThisInitialized(_this));_this.onChangeTime=_this.onChangeTime.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.state={seats:0,group_Name:'',pickup:'',lat:0,lng:0,location:'',date:new Date(),time:'',errors:{}};return _this;}// Set the state for seats\n_createClass(AddRide,[{key:\"onChangeSeats\",value:function onChangeSeats(e){this.setState({seats:e.target.value});}// Set the state for group name\n},{key:\"onChangeGroupName\",value:function onChangeGroupName(e){this.setState({group_Name:e.target.value});}// Set the state for location, latitude and longitude\n},{key:\"onChangeLocation\",value:function onChangeLocation(address,lat,lng){this.setState({location:address,lat:lat,lng:lng});}// Set the state of pickup\n},{key:\"onChangePickup\",value:function onChangePickup(e){this.setState({pickup:e.target.value});}//Set the state of Date\n},{key:\"onChangeDate\",value:function onChangeDate(date){this.setState({date:date});}//Set the state of time\n},{key:\"onChangeTime\",value:function onChangeTime(time,timeString){this.setState({time:timeString});}// submits the form to add a new ride\n},{key:\"onSubmit\",value:function onSubmit(e){var _this2=this;e.preventDefault();var user=this.props.auth.user;console.log(user);// Create a ride object to add to database\nvar ride={host_email:user.email,seats:this.state.seats,group_Name:this.state.group_Name,pickup:this.state.pickup,lat:this.state.lat,lng:this.state.lng,location:this.state.location,date:this.state.date,time:this.state.time};// API call to add new ride\naxios.post('/api/rides/add',ride).then(function(){window.alert('Ride created');window.location='/';}).catch(function(err){return _this2.setState({errors:err.response.data});});}},{key:\"render\",value:function render(){var errors=this.state.errors;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",null,\"Create Ride Groups!\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Group Name: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",value:this.state.group_Name,onChange:this.onChangeGroupName}),/*#__PURE__*/React.createElement(\"p\",{className:\"text-danger\"},errors.group_Name)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Seats: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",value:this.state.seats,onChange:this.onChangeSeats}),/*#__PURE__*/React.createElement(\"p\",{className:\"text-danger\"},errors.seats,errors.noSeats,errors.seatNaN)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Destination: \"),/*#__PURE__*/React.createElement(LoadScript,{googleMapsApiKey:process.env.REACT_APP_GOOGLE_KEY,libraries:libraries},/*#__PURE__*/React.createElement(PlacesAutocomplete,{onChangeLocation:this.onChangeLocation})),/*#__PURE__*/React.createElement(\"p\",{className:\"text-danger\"},errors.location)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Pickup: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",value:this.state.pickup,onChange:this.onChangePickup}),/*#__PURE__*/React.createElement(\"p\",{className:\"text-danger\"},errors.pickup)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Date: \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.date,onChange:this.onChangeDate})),/*#__PURE__*/React.createElement(\"p\",{className:\"text-danger\"},errors.date)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Time: \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TimePicker,{use12Hours:true,format:\"h:mm A\",selected:this.state.time,onChange:this.onChangeTime}),/*#__PURE__*/React.createElement(\"p\",{className:\"text-danger\"},errors.time))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Create Ride\",className:\"btn btn-primary\"}))));}}]);return AddRide;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,errors:state.errors};};export default connect(mapStateToProps)(AddRide);","map":{"version":3,"sources":["C:/Users/Ricky/Projects/RideBuddiesDeploy/client/src/components/pages/add-rides.component.js"],"names":["React","Component","axios","connect","DatePicker","TimePicker","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","LoadScript","libraries","PlacesAutocomplete","props","requestOptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","address","results","onChangeLocation","console","log","e","target","map","id","description","AddRide","onChangeGroupName","bind","onChangeSeats","onChangeDate","onChangePickup","onChangeTime","onSubmit","state","seats","group_Name","pickup","date","Date","time","errors","setState","timeString","preventDefault","user","auth","ride","host_email","email","post","then","window","alert","catch","err","response","noSeats","seatNaN","process","env","REACT_APP_GOOGLE_KEY","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport { TimePicker } from 'antd';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport usePlacesAutocomplete, {\r\n\tgetGeocode,\r\n\tgetLatLng,\r\n} from 'use-places-autocomplete';\r\n\r\nimport {\r\n\tCombobox,\r\n\tComboboxInput,\r\n\tComboboxPopover,\r\n\tComboboxList,\r\n\tComboboxOption,\r\n} from '@reach/combobox';\r\nimport '@reach/combobox/styles.css';\r\n\r\nimport { LoadScript } from '@react-google-maps/api';\r\n\r\nconst libraries = ['places'];\r\n\r\n// Autofill and Suggestion for the Location Field\r\n// Refactor from Google Maps API\r\nconst PlacesAutocomplete = (props) => {\r\n\tconst {\r\n\t\tready,\r\n\t\tvalue,\r\n\t\tsuggestions: { status, data },\r\n\t\tsetValue,\r\n\t\tclearSuggestions,\r\n\t} = usePlacesAutocomplete({\r\n\t\trequestOptions: {\r\n\t\t\tlocation: { lat: () => 37.774929, lng: () => -122.419418 },\r\n\t\t\tradius: 200 * 1000,\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className=\"location\">\r\n\t\t\t{/* Wrapper for the search bar and Auto suggestion List */}\r\n\t\t\t<Combobox\r\n\t\t\t\tonSelect={async (address) => {\r\n\t\t\t\t\tsetValue(address, false);\r\n\t\t\t\t\tclearSuggestions();\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst results = await getGeocode({ address });\r\n\t\t\t\t\t\tconst { lat, lng } = await getLatLng(results[0]);\r\n\t\t\t\t\t\tprops.onChangeLocation(address, lat, lng);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{/* Search Bar */}\r\n\t\t\t\t<ComboboxInput\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetValue(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={!ready}\r\n\t\t\t\t\tplaceholder=\"Enter an address\"\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Auto Fill and Suggestion list */}\r\n\t\t\t\t<ComboboxPopover>\r\n\t\t\t\t\t<ComboboxList>\r\n\t\t\t\t\t\t{status === 'OK' &&\r\n\t\t\t\t\t\t\tdata.map(({ id, description }) => (\r\n\t\t\t\t\t\t\t\t<ComboboxOption key={id} value={description} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ComboboxList>\r\n\t\t\t\t</ComboboxPopover>\r\n\t\t\t</Combobox>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nclass AddRide extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChangeGroupName = this.onChangeGroupName.bind(this);\r\n\t\tthis.onChangeSeats = this.onChangeSeats.bind(this);\r\n\t\tthis.onChangeLocation = this.onChangeLocation.bind(this);\r\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\r\n\t\tthis.onChangePickup = this.onChangePickup.bind(this);\r\n\t\tthis.onChangeTime = this.onChangeTime.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tseats: 0,\r\n\t\t\tgroup_Name: '',\r\n\t\t\tpickup: '',\r\n\t\t\tlat: 0,\r\n\t\t\tlng: 0,\r\n\t\t\tlocation: '',\r\n\t\t\tdate: new Date(),\r\n\t\t\ttime: '',\r\n\t\t\terrors: {},\r\n\t\t};\r\n\t}\r\n\r\n\t// Set the state for seats\r\n\tonChangeSeats(e) {\r\n\t\tthis.setState({\r\n\t\t\tseats: e.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t// Set the state for group name\r\n\tonChangeGroupName(e) {\r\n\t\tthis.setState({\r\n\t\t\tgroup_Name: e.target.value,\r\n\t\t});\r\n\t}\r\n\t// Set the state for location, latitude and longitude\r\n\tonChangeLocation(address, lat, lng) {\r\n\t\tthis.setState({\r\n\t\t\tlocation: address,\r\n\t\t\tlat: lat,\r\n\t\t\tlng: lng,\r\n\t\t});\r\n\t}\r\n\t// Set the state of pickup\r\n\tonChangePickup(e) {\r\n\t\tthis.setState({\r\n\t\t\tpickup: e.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t//Set the state of Date\r\n\tonChangeDate(date) {\r\n\t\tthis.setState({\r\n\t\t\tdate: date,\r\n\t\t});\r\n\t}\r\n\r\n\t//Set the state of time\r\n\tonChangeTime(time, timeString) {\r\n\t\tthis.setState({\r\n\t\t\ttime: timeString,\r\n\t\t});\r\n\t}\r\n\r\n\t// submits the form to add a new ride\r\n\tonSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tconst { user } = this.props.auth;\r\n\t\tconsole.log(user);\r\n\r\n\t\t// Create a ride object to add to database\r\n\t\tconst ride = {\r\n\t\t\thost_email: user.email,\r\n\t\t\tseats: this.state.seats,\r\n\t\t\tgroup_Name: this.state.group_Name,\r\n\t\t\tpickup: this.state.pickup,\r\n\t\t\tlat: this.state.lat,\r\n\t\t\tlng: this.state.lng,\r\n\t\t\tlocation: this.state.location,\r\n\t\t\tdate: this.state.date,\r\n\t\t\ttime: this.state.time,\r\n\t\t};\r\n\t\t// API call to add new ride\r\n\t\taxios\r\n\t\t\t.post('/api/rides/add', ride)\r\n\t\t\t.then(() => {\r\n\t\t\t\twindow.alert('Ride created');\r\n\t\t\t\twindow.location = '/';\r\n\t\t\t})\r\n\t\t\t.catch((err) => this.setState({ errors: err.response.data }));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { errors } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<br />\r\n\t\t\t\t<h3>Create Ride Groups!</h3>\r\n\t\t\t\t{/* Add rides form */}\r\n\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\r\n\t\t\t\t\t{/* Group name Field*/}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Group Name: </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tvalue={this.state.group_Name}\r\n\t\t\t\t\t\t\tonChange={this.onChangeGroupName}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.group_Name}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Seats Field*/}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Seats: </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tvalue={this.state.seats}\r\n\t\t\t\t\t\t\tonChange={this.onChangeSeats}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p className=\"text-danger\">\r\n\t\t\t\t\t\t\t{errors.seats}\r\n\t\t\t\t\t\t\t{errors.noSeats}\r\n\t\t\t\t\t\t\t{errors.seatNaN}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Destination Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Destination: </label>\r\n\t\t\t\t\t\t<LoadScript\r\n\t\t\t\t\t\t\tgoogleMapsApiKey={process.env.REACT_APP_GOOGLE_KEY}\r\n\t\t\t\t\t\t\tlibraries={libraries}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PlacesAutocomplete onChangeLocation={this.onChangeLocation} />\r\n\t\t\t\t\t\t</LoadScript>\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.location}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Pickup Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Pickup: </label>\r\n\t\t\t\t\t\t<input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.pickup}\r\n                        onChange={this.onChangePickup}\r\n                        />\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.pickup}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Date Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Date: </label>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tselected={this.state.date}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"text-danger\">{errors.date}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Time Field */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Time: </label>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\t\t\tuse12Hours\r\n\t\t\t\t\t\t\t\tformat=\"h:mm A\"\r\n\t\t\t\t\t\t\t\tselected={this.state.time}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeTime}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p className=\"text-danger\">{errors.time}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Submit Button */}\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue=\"Create Ride\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAddRide.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n\terrors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddRide);\r\n"]},"metadata":{},"sourceType":"module"}