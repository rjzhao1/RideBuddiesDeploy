{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricky\\\\Documents\\\\CS Stuff\\\\Projects\\\\RideBuddies\\\\client\\\\src\\\\components\\\\pages\\\\add-rides.component.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DatePicker from 'react-datepicker';\nimport { TimePicker } from 'antd';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'antd/dist/antd.css';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport { LoadScript } from \"@react-google-maps/api\";\nconst libraries = [\"places\"];\n\nconst PlacesAutocomplete = props => {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 37.774929,\n        lng: () => -122.419418\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pickup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        console.log({\n          lat,\n          lng\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    disabled: !ready,\n    placeholder: \"Enter an address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nclass AddRide extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeGroupName = this.onChangeGroupName.bind(this);\n    this.onChangeSeats = this.onChangeSeats.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangePickup = this.onChangePickup.bind(this);\n    this.onChangeTime = this.onChangeTime.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      seats: 0,\n      group_Name: '',\n      pickup: '',\n      location: '',\n      date: new Date(),\n      time: '',\n      errors: {}\n    };\n  }\n\n  onChangeSeats(e) {\n    this.setState({\n      seats: e.target.value\n    });\n  }\n\n  onChangeGroupName(e) {\n    this.setState({\n      group_Name: e.target.value\n    });\n  }\n\n  onChangePickup(e) {\n    this.setState({\n      pickup: e.target.value\n    });\n  }\n\n  onChangeLocation(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onChangeTime(time, timeString) {\n    this.setState({\n      time: timeString\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      user\n    } = this.props.auth;\n    console.log(user);\n    const ride = {\n      host_email: user.email,\n      seats: this.state.seats,\n      group_Name: this.state.group_Name,\n      pickup: this.state.pickup,\n      location: this.state.location,\n      date: this.state.date,\n      time: this.state.time\n    };\n    axios.post('/api/rides/add', ride).then(() => {\n      window.alert(\"Ride created\");\n      window.location = '/';\n    }).catch(err => this.setState({\n      errors: err.response.data\n    }));\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"You are on the Create Exercises Component!\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"Group Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.group_Name,\n      onChange: this.onChangeGroupName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 26\n      }\n    }, errors.group_Name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \"Seats: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.seats,\n      onChange: this.onChangeSeats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, errors.seats, errors.noSeats)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"Pickup: \"), /*#__PURE__*/React.createElement(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      libraries: libraries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, errors.pickup)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, \"Destination: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.location,\n      onChange: this.onChangeLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, errors.location)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.onChangeDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, errors.date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, \"Time: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\",\n      selected: this.state.time,\n      onChange: this.onChangeTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, errors.time))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Ride\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nAddRide.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(AddRide);","map":{"version":3,"sources":["C:/Users/Ricky/Documents/CS Stuff/Projects/RideBuddies/client/src/components/pages/add-rides.component.js"],"names":["React","Component","axios","PropTypes","connect","DatePicker","TimePicker","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","LoadScript","libraries","PlacesAutocomplete","props","ready","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","lat","lng","radius","address","results","console","log","err","e","target","map","id","description","AddRide","constructor","onChangeGroupName","bind","onChangeSeats","onChangeLocation","onChangeDate","onChangePickup","onChangeTime","onSubmit","state","seats","group_Name","pickup","date","Date","time","errors","setState","timeString","preventDefault","user","auth","ride","host_email","email","post","then","window","alert","catch","response","render","noSeats","process","env","REACT_APP_GOOGLE_KEY","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from 'react-datepicker';\r\nimport {TimePicker} from 'antd';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nimport usePlacesAutocomplete,{\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\n\r\nimport {\r\n    Combobox,\r\n    ComboboxInput,\r\n    ComboboxPopover,\r\n    ComboboxList,\r\n    ComboboxOption,\r\n  } from \"@reach/combobox\";\r\n  import \"@reach/combobox/styles.css\";\r\n\r\n  import {\r\n    LoadScript,\r\n}from \"@react-google-maps/api\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\n\r\n\r\nconst PlacesAutocomplete  = props =>{\r\n    const{\r\n        ready,\r\n        value,\r\n        suggestions:{status,data},\r\n        setValue,\r\n        clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n        requestOptions:{\r\n            location:{ lat:()=>37.774929,lng:()=>-122.419418},\r\n            radius:200*1000,\r\n        },\r\n    });\r\n    return (\r\n        <div className=\"pickup\">\r\n            <Combobox onSelect={ async (address)=>{\r\n                setValue(address,false);\r\n                clearSuggestions();\r\n\r\n                try{\r\n                    const results = await getGeocode({address});\r\n                    const {lat, lng} = await getLatLng(results[0]);\r\n                    console.log({lat,lng});\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n                \r\n                }}>\r\n                <ComboboxInput \r\n                    value={value} \r\n                    onChange={(e)=>{setValue(e.target.value);}} \r\n                    disabled={!ready}\r\n                    placeholder=\"Enter an address\"\r\n                    />\r\n                    <ComboboxPopover>\r\n                        <ComboboxList>\r\n                        {status===\"OK\" && data.map(({id,description})=>(\r\n                            <ComboboxOption key={id} value={description}/>\r\n                        ))}\r\n                       </ComboboxList>\r\n                    </ComboboxPopover>\r\n            </Combobox>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nclass AddRide extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeGroupName = this.onChangeGroupName.bind(this);\r\n        this.onChangeSeats = this.onChangeSeats.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onChangePickup = this.onChangePickup.bind(this);\r\n        this.onChangeTime = this.onChangeTime.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            seats:0,\r\n            group_Name: '',\r\n            pickup: '',\r\n            location: '',\r\n            date: new Date(),\r\n            time:'',\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n    onChangeSeats(e){\r\n        this.setState({\r\n            seats: e.target.value\r\n        });\r\n    }\r\n    onChangeGroupName(e){\r\n        this.setState({\r\n            group_Name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePickup(e){\r\n        this.setState({\r\n            pickup: e.target.value\r\n        });\r\n    }\r\n    onChangeLocation(e){\r\n        this.setState({\r\n            location: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeDate(date){\r\n        this.setState({\r\n            date: date\r\n        });\r\n    }\r\n\r\n    onChangeTime(time,timeString){\r\n        this.setState({\r\n            time: timeString\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const {user} = this.props.auth;\r\n        console.log(user);\r\n        \r\n        const ride = {\r\n            host_email: user.email,\r\n            seats: this.state.seats,\r\n            group_Name: this.state.group_Name,\r\n            pickup: this.state.pickup,\r\n            location: this.state.location,\r\n            date: this.state.date,\r\n            time: this.state.time\r\n        }\r\n\r\n        axios.post('/api/rides/add',ride)\r\n        .then(() =>{\r\n            window.alert(\"Ride created\");\r\n            window.location = '/';\r\n        })\r\n        .catch(err => this.setState({errors:err.response.data}));\r\n        \r\n    \r\n    }\r\n\r\n\r\n    render(){\r\n        const {errors} =this.state;\r\n     \r\n        return(\r\n           \r\n            <div className=\"container\">\r\n                <br />\r\n                <h3>You are on the Create Exercises Component!</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Group Name: </label>\r\n                        <input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.group_Name}\r\n                        onChange={this.onChangeGroupName}\r\n                        />\r\n                         <p className=\"text-danger\">{errors.group_Name}</p>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Seats: </label>\r\n                        <input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.seats}\r\n                        onChange={this.onChangeSeats}\r\n                        />\r\n                        <p className=\"text-danger\">\r\n                            {errors.seats}\r\n                            {errors.noSeats}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Pickup: </label>\r\n                        {/* <input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.pickup}\r\n                        onChange={this.onChangePickup}\r\n                        /> */}\r\n\r\n                        <LoadScript \r\n                        googleMapsApiKey={process.env.REACT_APP_GOOGLE_KEY}\r\n                        libraries={libraries}\r\n                        >\r\n                            <PlacesAutocomplete/>\r\n                        </LoadScript>\r\n                        <p className=\"text-danger\">{errors.pickup}</p>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Destination: </label>\r\n                        <input \r\n                        type = \"text\"\r\n                        className=\"form-control\"\r\n                        value = {this.state.location}\r\n                        onChange={this.onChangeLocation}\r\n                        />\r\n                        <p className=\"text-danger\">{errors.location}</p>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date: </label>\r\n                        <div>\r\n                        <DatePicker\r\n                            selected={this.state.date}\r\n                            onChange={this.onChangeDate} \r\n                        />\r\n                        </div>\r\n                        <p className=\"text-danger\">{errors.date}</p>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Time: </label>\r\n                        <div>\r\n                        <TimePicker \r\n                            use12Hours \r\n                            format=\"h:mm A\" \r\n                            selected={this.state.time}\r\n                            onChange={this.onChangeTime} \r\n                            />\r\n                            <p className=\"text-danger\">{errors.time}</p>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    \r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Ride\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nAddRide.propTypes = {\r\n    auth:PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth:state.auth,\r\n    errors:state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(AddRide);"]},"metadata":{},"sourceType":"module"}