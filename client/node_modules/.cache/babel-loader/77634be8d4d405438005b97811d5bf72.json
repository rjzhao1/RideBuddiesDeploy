{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _regeneratorRuntime from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Ricky\\\\Projects\\\\RideBuddiesDeploy\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{Component}from'react';import axios from'axios';import{GoogleMap,Marker,InfoWindow,LoadScript}from\"@react-google-maps/api\";import usePlacesAutocomplete,{getGeocode,getLatLng}from\"use-places-autocomplete\";import{Combobox,ComboboxInput,ComboboxPopover,ComboboxList,ComboboxOption}from\"@reach/combobox\";import\"@reach/combobox/styles.css\";import compass from\"../../img/compass.svg\";// height and width of the map\nvar mapContainerStyle={height:\"100vh\",width:\"100vw\"};// Default center of the map\nvar center={lat:37.774929,lng:-122.419418};var options={disableDefaultUI:true,zoomControl:true};var libraries=[\"places\"];var url=\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\";// Component for Search Bar for Map\nvar PlacesAutocomplete=function PlacesAutocomplete(props){var _usePlacesAutocomplet=usePlacesAutocomplete({requestOptions:{location:{lat:function lat(){return 37.774929;},lng:function lng(){return-122.419418;}},radius:200*1000}}),ready=_usePlacesAutocomplet.ready,value=_usePlacesAutocomplet.value,_usePlacesAutocomplet2=_usePlacesAutocomplet.suggestions,status=_usePlacesAutocomplet2.status,data=_usePlacesAutocomplet2.data,setValue=_usePlacesAutocomplet.setValue,clearSuggestions=_usePlacesAutocomplet.clearSuggestions;return/*#__PURE__*/React.createElement(\"div\",{className:\"search\"},/*#__PURE__*/React.createElement(Combobox,{onSelect:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address){var results,_yield$getLatLng,lat,lng;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setValue(address,false);clearSuggestions();_context.prev=2;_context.next=5;return getGeocode({address:address});case 5:results=_context.sent;_context.next=8;return getLatLng(results[0]);case 8:_yield$getLatLng=_context.sent;lat=_yield$getLatLng.lat;lng=_yield$getLatLng.lng;props.panTo({lat:lat,lng:lng});_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function(_x){return _ref.apply(this,arguments);};}()},/*#__PURE__*/React.createElement(ComboboxInput,{value:value,onChange:function onChange(e){setValue(e.target.value);},disabled:!ready,placeholder:\"Enter an address\"}),/*#__PURE__*/React.createElement(ComboboxPopover,null,/*#__PURE__*/React.createElement(ComboboxList,null,status===\"OK\"&&data.map(function(_ref2){var id=_ref2.id,description=_ref2.description;return/*#__PURE__*/React.createElement(ComboboxOption,{key:id,value:description});})))));};// Component for locating current location\nvar Locate=function Locate(props){return/*#__PURE__*/React.createElement(\"button\",{className:\"locate\",onClick:function onClick(){navigator.geolocation.getCurrentPosition(function(position){props.panTo({lat:position.coords.latitude,lng:position.coords.longitude});},function(){return null;});}},/*#__PURE__*/React.createElement(\"img\",{src:compass,alt:\"compass - locate me\",style:{width:\"40px\",height:\"40px\"}}));};var RideMap=/*#__PURE__*/function(_Component){_inherits(RideMap,_Component);var _super=_createSuper(RideMap);function RideMap(props){var _this;_classCallCheck(this,RideMap);_this=_super.call(this,props);_this.onMapLoad=_this.onMapLoad.bind(_assertThisInitialized(_this));_this.panTo=_this.panTo.bind(_assertThisInitialized(_this));_this.state={selected:null,map:{},rides:[],currlat:null,currlong:null,currSelected:false};return _this;}// Receiving all the rides avalible from the backend\n_createClass(RideMap,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('/api/rides').then(function(response){_this2.setState({rides:response.data});}).catch(function(error){return console.log(error);});}// Load the map object\n},{key:\"onMapLoad\",value:function onMapLoad(map){this.setState({map:map});}// Function to zoom to a certain location on the map\n},{key:\"panTo\",value:function panTo(_ref3){var lat=_ref3.lat,lng=_ref3.lng;this.state.map.panTo({lat:lat,lng:lng});this.state.map.setZoom(15);this.setState({currlat:lat,currlong:lng});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(LoadScript,{googleMapsApiKey:process.env.REACT_APP_GOOGLE_KEY,libraries:libraries},/*#__PURE__*/React.createElement(PlacesAutocomplete,{panTo:this.panTo}),/*#__PURE__*/React.createElement(Locate,{panTo:this.panTo}),/*#__PURE__*/React.createElement(\"h2\",null,\"Rides Locations\"),/*#__PURE__*/React.createElement(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:8,center:center,options:options,onLoad:this.onMapLoad},this.state.rides.map(function(currRide){return/*#__PURE__*/React.createElement(Marker,{key:currRide.id,position:{lat:currRide.lat,lng:currRide.lng},onClick:function onClick(){return _this3.setState({selected:currRide});}});}),this.state.currlat?/*#__PURE__*/React.createElement(Marker,{key:1,position:{lat:this.state.currlat,lng:this.state.currlong},icon:{url:url},onClick:function onClick(){return _this3.setState({currSelected:true});}}):\"\",this.state.currSelected?/*#__PURE__*/React.createElement(InfoWindow,{position:{lat:this.state.currlat,lng:this.state.currlong},onCloseClick:function onCloseClick(){return _this3.setState({currSelected:false});}},/*#__PURE__*/React.createElement(\"h4\",null,\"You are here!\")):null,this.state.selected?/*#__PURE__*/React.createElement(InfoWindow,{position:{lat:this.state.selected.lat,lng:this.state.selected.lng},onCloseClick:function onCloseClick(){return _this3.setState({selected:null});}},/*#__PURE__*/React.createElement(\"div\",{className:\"info-box\"},/*#__PURE__*/React.createElement(\"p\",{className:\"info-title\"},this.state.selected.group_Name),/*#__PURE__*/React.createElement(\"p\",{className:\"info-subtitle\"},\"Seats: \",this.state.selected.seats),/*#__PURE__*/React.createElement(\"p\",{className:\"info-subtitle\"},\"Where:\"),/*#__PURE__*/React.createElement(\"p\",{className:\"info-text\"},this.state.selected.location),/*#__PURE__*/React.createElement(\"p\",{className:\"info-subtitle\"},\"Pickup:\"),/*#__PURE__*/React.createElement(\"p\",{className:\"info-text\"},this.state.selected.pickup),/*#__PURE__*/React.createElement(\"p\",{className:\"info-subtitle\"},\"When:\"),/*#__PURE__*/React.createElement(\"p\",{className:\"info-text\"},this.state.selected.date.substring(0,10)+\" \"+this.state.selected.time))):null)));}}]);return RideMap;}(Component);export default RideMap;","map":{"version":3,"sources":["C:/Users/Ricky/Projects/RideBuddiesDeploy/client/src/components/pages/map.component.js"],"names":["React","Component","axios","GoogleMap","Marker","InfoWindow","LoadScript","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapContainerStyle","height","width","center","lat","lng","options","disableDefaultUI","zoomControl","libraries","url","PlacesAutocomplete","props","requestOptions","location","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","address","results","panTo","console","log","e","target","map","id","description","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","compass","RideMap","onMapLoad","bind","state","selected","rides","currlat","currlong","currSelected","get","then","response","setState","catch","error","setZoom","process","env","REACT_APP_GOOGLE_KEY","currRide","group_Name","seats","pickup","date","substring","time"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    GoogleMap,\r\n    Marker,\r\n    InfoWindow,\r\n    LoadScript,\r\n}from \"@react-google-maps/api\";\r\n\r\nimport usePlacesAutocomplete,{\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\n\r\nimport {\r\n    Combobox,\r\n    ComboboxInput,\r\n    ComboboxPopover,\r\n    ComboboxList,\r\n    ComboboxOption,\r\n  } from \"@reach/combobox\";\r\n  import \"@reach/combobox/styles.css\";\r\n\r\n\r\nimport compass from \"../../img/compass.svg\";\r\n// height and width of the map\r\nconst mapContainerStyle = {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n}\r\n\r\n// Default center of the map\r\nconst center = {\r\n    lat:37.774929,\r\n    lng:-122.419418,\r\n}\r\n\r\nconst options = {\r\n    disableDefaultUI:true,\r\n    zoomControl:true,\r\n}\r\n\r\nconst libraries = [\"places\"];\r\nconst url= \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\";\r\n\r\n// Component for Search Bar for Map\r\nconst PlacesAutocomplete  = props =>{\r\n    const{\r\n        ready,\r\n        value,\r\n        suggestions:{status,data},\r\n        setValue,\r\n        clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n        requestOptions:{\r\n            location:{ lat:()=>37.774929,lng:()=>-122.419418},\r\n            radius:200*1000,\r\n        },\r\n    });\r\n    return (\r\n        <div className='search'>\r\n            {/* Wrapper for the search bar and Auto suggestion List */}\r\n            <Combobox onSelect={ async (address)=>{\r\n                setValue(address,false);\r\n                clearSuggestions();\r\n\r\n                try{\r\n                    const results = await getGeocode({address});\r\n                    const {lat, lng} = await getLatLng(results[0]);\r\n                    props.panTo({lat,lng});\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n                \r\n                }}>\r\n\r\n                {/* Search Bar */}\r\n                <ComboboxInput \r\n                    value={value} \r\n                    onChange={(e)=>{setValue(e.target.value);}} \r\n                    disabled={!ready}\r\n                    placeholder=\"Enter an address\"\r\n                    />\r\n                    {/* Auto Fill and Suggestion list */}\r\n                    <ComboboxPopover>\r\n                        <ComboboxList>\r\n                        {status===\"OK\" && data.map(({id,description})=>(\r\n                            <ComboboxOption key={id} value={description}/>\r\n                        ))}\r\n                       </ComboboxList>\r\n                    </ComboboxPopover>\r\n            </Combobox>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n// Component for locating current location\r\nconst Locate  = props =>{\r\n   return <button className=\"locate\" onClick={()=>{\r\n       navigator.geolocation.getCurrentPosition((\r\n            position)=>{\r\n                props.panTo({\r\n                    lat: position.coords.latitude,\r\n                    lng:position.coords.longitude\r\n                });\r\n            }\r\n            ,()=>null\r\n        );\r\n   }}>\r\n            <img src={compass} alt=\"compass - locate me\" style={{width:\"40px\", height:\"40px\"}}></img>\r\n          </button>\r\n}\r\n\r\nclass RideMap extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.onMapLoad = this.onMapLoad.bind(this);\r\n        this.panTo = this.panTo.bind(this);\r\n        this.state = {\r\n                        selected:null,\r\n                        map:{},\r\n                        rides:[],\r\n                        currlat:null,\r\n                        currlong:null,\r\n                        currSelected:false,\r\n                    };\r\n    }\r\n\r\n    // Receiving all the rides avalible from the backend\r\n    componentDidMount(){\r\n        axios.get('/api/rides')\r\n            .then(response =>{this.setState({rides: response.data});\r\n            })\r\n            .catch((error)=> console.log(error));\r\n    }\r\n\r\n    // Load the map object\r\n    onMapLoad(map){\r\n        this.setState({\r\n            map:map\r\n        })\r\n    }\r\n\r\n  \r\n    // Function to zoom to a certain location on the map\r\n   panTo({lat,lng}){\r\n        this.state.map.panTo({lat,lng});\r\n        this.state.map.setZoom(15);\r\n        this.setState({currlat:lat,currlong:lng});\r\n   }\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                {/* Wrapper to load the scripts for the map */}\r\n                <LoadScript \r\n                    googleMapsApiKey={process.env.REACT_APP_GOOGLE_KEY}\r\n                    libraries={libraries}\r\n                >\r\n                    {/* Search bar and Current Location button */}\r\n                    <PlacesAutocomplete panTo={this.panTo}/>\r\n                    <Locate panTo={this.panTo}/>\r\n\r\n                    <h2>Rides Locations</h2>\r\n                    <GoogleMap mapContainerStyle={mapContainerStyle} \r\n                        zoom={8}\r\n                        center={center}\r\n                        options={options}\r\n                        onLoad={this.onMapLoad}\r\n                    >\r\n                        {/* Markers for all avalible Rides */}\r\n                        {this.state.rides.map(currRide => \r\n                            <Marker key={currRide.id} \r\n                                    position={{lat:currRide.lat,lng:currRide.lng}}\r\n                                    onClick={()=>this.setState({selected:currRide})}\r\n                                    />)}\r\n                        {/* Marker for current location if zoomed */}\r\n                        {this.state.currlat?\r\n                            <Marker key={1} \r\n                                   position={{lat:this.state.currlat,lng:this.state.currlong}}\r\n                                   icon={{url:url}}\r\n                                   onClick={()=>this.setState({currSelected:true})}\r\n                                    />:\"\"}\r\n\r\n                        {/* Info Window indicating your location when zoom */}\r\n                        {this.state.currSelected?(\r\n                        <InfoWindow \r\n                            position={{lat:this.state.currlat,lng:this.state.currlong}} \r\n                            onCloseClick={()=>this.setState({currSelected:false})}\r\n                            >\r\n                                <h4>You are here!</h4>\r\n                        </InfoWindow>):null}\r\n\r\n                        {/* Info Window for each rides */}\r\n                        {this.state.selected? \r\n                        (<InfoWindow \r\n                            position={{lat:this.state.selected.lat,lng:this.state.selected.lng}} \r\n                            onCloseClick={()=>this.setState({selected:null})}>\r\n                             <div className=\"info-box\">\r\n                                <p className=\"info-title\">{this.state.selected.group_Name}</p>\r\n                                <p className=\"info-subtitle\">Seats: {this.state.selected.seats}</p>\r\n                                <p className=\"info-subtitle\">Where:</p>\r\n                                <p className=\"info-text\">{this.state.selected.location}</p>\r\n                                <p className=\"info-subtitle\">Pickup:</p>\r\n                                <p className=\"info-text\">{this.state.selected.pickup}</p>\r\n                                <p className=\"info-subtitle\">When:</p>\r\n                                <p className=\"info-text\">{this.state.selected.date.substring(0,10) + \" \"+ this.state.selected.time}</p>\r\n                                \r\n                            </div>\r\n                        </InfoWindow>):null}\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default RideMap;"]},"metadata":{},"sourceType":"module"}